{"version":3,"file":"index.js","mappingsxjUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzxhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxtOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvxrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClhLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxpjl8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpxdhlvQA;;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;AEDA;AACA;AACA;AACA","sources":["../webpack://crowdin-pretranslate-action/./dist/main.js","../webpack://crowdin-pretranslate-action/./node_modules/@actions/core/lib/command.js","../webpack://crowdin-pretranslate-action/./node_modules/@actions/core/lib/core.js","../webpack://crowdin-pretranslate-action/./node_modules/@actions/core/lib/file-command.js","../webpack://crowdin-pretranslate-action/./node_modules/@actions/core/lib/oidc-utils.js","../webpack://crowdin-pretranslate-action/./node_modules/@actions/core/lib/summary.js","../webpack://crowdin-pretranslate-action/./node_modules/@actions/core/lib/utils.js","../webpack://crowdin-pretranslate-action/./node_modules/@actions/http-client/auth.js","../webpack://crowdin-pretranslate-action/./node_modules/@actions/http-client/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@actions/http-client/proxy.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/core/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/core/internal/axios/axiosProvider.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/core/internal/fetch/fetchClient.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/core/internal/retry/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/dictionaries/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/distributions/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/glossaries/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/issues/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/labels/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/languages/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/machineTranslation/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/projectsGroups/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/reports/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/screenshots/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/sourceFiles/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/sourceStrings/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/stringComments/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/stringTranslations/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/tasks/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/teams/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/translationMemory/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/translationStatus/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/translations/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/uploadStorage/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/users/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/vendors/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/webhooks/index.js","../webpack://crowdin-pretranslate-action/./node_modules/@crowdin/crowdin-api-client/out/workflows/index.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/index.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/adapters/http.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/adapters/xhr.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/axios.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/cancel/Cancel.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/cancel/CancelToken.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/cancel/isCancel.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/core/Axios.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/core/InterceptorManager.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/core/buildFullPath.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/core/createError.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/core/dispatchRequest.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/core/enhanceError.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/core/mergeConfig.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/core/settle.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/core/transformData.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/defaults.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/helpers/bind.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/helpers/buildURL.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/helpers/combineURLs.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/helpers/cookies.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/helpers/isAbsoluteURL.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/helpers/isAxiosError.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/helpers/isURLSameOrigin.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/helpers/normalizeHeaderName.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/helpers/parseHeaders.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/helpers/spread.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/helpers/validator.js","../webpack://crowdin-pretranslate-action/./node_modules/axios/lib/utils.js","../webpack://crowdin-pretranslate-action/./node_modules/follow-redirects/debug.js","../webpack://crowdin-pretranslate-action/./node_modules/follow-redirects/index.js","../webpack://crowdin-pretranslate-action/./node_modules/tunnel/index.js","../webpack://crowdin-pretranslate-action/./node_modules/tunnel/lib/tunnel.js","../webpack://crowdin-pretranslate-action/./node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://crowdin-pretranslate-action/external node-commonjs \"assert\"","../webpack://crowdin-pretranslate-action/external node-commonjs \"events\"","../webpack://crowdin-pretranslate-action/external node-commonjs \"fs\"","../webpack://crowdin-pretranslate-action/external node-commonjs \"http\"","../webpack://crowdin-pretranslate-action/external node-commonjs \"https\"","../webpack://crowdin-pretranslate-action/external node-commonjs \"net\"","../webpack://crowdin-pretranslate-action/external node-commonjs \"os\"","../webpack://crowdin-pretranslate-action/external node-commonjs \"path\"","../webpack://crowdin-pretranslate-action/external node-commonjs \"stream\"","../webpack://crowdin-pretranslate-action/external node-commonjs \"tls\"","../webpack://crowdin-pretranslate-action/external node-commonjs \"url\"","../webpack://crowdin-pretranslate-action/external node-commonjs \"util\"","../webpack://crowdin-pretranslate-action/external node-commonjs \"zlib\"","../webpack://crowdin-pretranslate-action/webpack/bootstrap","../webpack://crowdin-pretranslate-action/webpack/runtime/compat","../webpack://crowdin-pretranslate-action/webpack/before-startup","../webpack://crowdin-pretranslate-action/webpack/startup","../webpack://crowdin-pretranslate-action/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = __importStar(require(\"@actions/core\"));\nconst crowdin_api_client_1 = __importDefault(require(\"@crowdin/crowdin-api-client\"));\n// Initialize Crowdin Client with API key from secrets\nconst credentials = {\n    token: core.getInput(\"api_key\"),\n};\nconst { projectsGroupsApi, sourceFilesApi, translationsApi, } = new crowdin_api_client_1.default(credentials);\nfunction getProjectFileIDs(projectID) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const response = yield sourceFilesApi.listProjectFiles(projectID);\n            return response.data.map((file) => {\n                return file.data.id;\n            });\n        }\n        catch (error) {\n            core.error(\"Could not get project file IDs.\");\n            throw (error);\n        }\n    });\n}\nfunction getProjectLanguageIDs(projectID) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const response = yield projectsGroupsApi.getProject(projectID);\n            return response.data.targetLanguageIds;\n        }\n        catch (error) {\n            core.error(\"Could not get project language IDs\");\n            throw (error);\n        }\n    });\n}\nfunction preTranslationTMFromData(projectID, langIDs, fileIDs) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const x = \"tm\"; // Translational memory\n        const request = {\n            languageIds: langIDs,\n            fileIds: fileIDs,\n            method: x,\n        };\n        core.info(\"Requesting translations for the following languages:\" + langIDs.toString());\n        const res = yield translationsApi.applyPreTranslation(projectID, request);\n        return res;\n    });\n}\nfunction run() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const projectID = parseInt(core.getInput(\"project_id\"));\n        const fIDs = yield getProjectFileIDs(projectID);\n        const lIDs = yield getProjectLanguageIDs(projectID);\n        const result = yield preTranslationTMFromData(projectID, lIDs, fIDs);\n        return result;\n    });\n}\n(() => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const out = yield run();\n        core.info(\"Success! The information for the pre-translation TM run is: \");\n        let string_rep = JSON.stringify(out, null, 2);\n        core.info(string_rep);\n    }\n    catch (e) {\n        let string_rep = JSON.stringify(e, null, 2);\n        core.setFailed(string_rep);\n    }\n    // `text` is not available here\n}))();\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst oidc_utils_1 = require(\"./oidc-utils\");\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    return inputs;\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\nfunction getIDToken(aud) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield oidc_utils_1.OidcClient.getIDToken(aud);\n    });\n}\nexports.getIDToken = getIDToken;\n/**\n * Summary exports\n */\nvar summary_1 = require(\"./summary\");\nObject.defineProperty(exports, \"summary\", { enumerable: true, get: function () { return summary_1.summary; } });\n/**\n * @deprecated use core.summary\n */\nvar summary_2 = require(\"./summary\");\nObject.defineProperty(exports, \"markdownSummary\", { enumerable: true, get: function () { return summary_2.markdownSummary; } });\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issueCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OidcClient = void 0;\nconst http_client_1 = require(\"@actions/http-client\");\nconst auth_1 = require(\"@actions/http-client/auth\");\nconst core_1 = require(\"./core\");\nclass OidcClient {\n    static createHttpClient(allowRetry = true, maxRetry = 10) {\n        const requestOptions = {\n            allowRetries: allowRetry,\n            maxRetries: maxRetry\n        };\n        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);\n    }\n    static getRequestToken() {\n        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];\n        if (!token) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');\n        }\n        return token;\n    }\n    static getIDTokenUrl() {\n        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];\n        if (!runtimeUrl) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');\n        }\n        return runtimeUrl;\n    }\n    static getCall(id_token_url) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpclient = OidcClient.createHttpClient();\n            const res = yield httpclient\n                .getJson(id_token_url)\n                .catch(error => {\n                throw new Error(`Failed to get ID Token. \\n \n        Error Code : ${error.statusCode}\\n \n        Error Message: ${error.result.message}`);\n            });\n            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;\n            if (!id_token) {\n                throw new Error('Response json body do not have ID Token field');\n            }\n            return id_token;\n        });\n    }\n    static getIDToken(audience) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // New ID Token is requested from action service\n                let id_token_url = OidcClient.getIDTokenUrl();\n                if (audience) {\n                    const encodedAudience = encodeURIComponent(audience);\n                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;\n                }\n                core_1.debug(`ID token url is ${id_token_url}`);\n                const id_token = yield OidcClient.getCall(id_token_url);\n                core_1.setSecret(id_token);\n                return id_token;\n            }\n            catch (error) {\n                throw new Error(`Error message: ${error.message}`);\n            }\n        });\n    }\n}\nexports.OidcClient = OidcClient;\n//# sourceMappingURL=oidc-utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;\nconst os_1 = require(\"os\");\nconst fs_1 = require(\"fs\");\nconst { access, appendFile, writeFile } = fs_1.promises;\nexports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';\nexports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';\nclass Summary {\n    constructor() {\n        this._buffer = '';\n    }\n    /**\n     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist\n     * Also checks r/w permissions.\n     *\n     * @returns step summary file path\n     */\n    filePath() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._filePath) {\n                return this._filePath;\n            }\n            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];\n            if (!pathFromEnv) {\n                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);\n            }\n            try {\n                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);\n            }\n            catch (_a) {\n                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);\n            }\n            this._filePath = pathFromEnv;\n            return this._filePath;\n        });\n    }\n    /**\n     * Wraps content in an HTML tag, adding any HTML attributes\n     *\n     * @param {string} tag HTML tag to wrap\n     * @param {string | null} content content within the tag\n     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add\n     *\n     * @returns {string} content wrapped in HTML element\n     */\n    wrap(tag, content, attrs = {}) {\n        const htmlAttrs = Object.entries(attrs)\n            .map(([key, value]) => ` ${key}=\"${value}\"`)\n            .join('');\n        if (!content) {\n            return `<${tag}${htmlAttrs}>`;\n        }\n        return `<${tag}${htmlAttrs}>${content}</${tag}>`;\n    }\n    /**\n     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.\n     *\n     * @param {SummaryWriteOptions} [options] (optional) options for write operation\n     *\n     * @returns {Promise<Summary>} summary instance\n     */\n    write(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);\n            const filePath = yield this.filePath();\n            const writeFunc = overwrite ? writeFile : appendFile;\n            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });\n            return this.emptyBuffer();\n        });\n    }\n    /**\n     * Clears the summary buffer and wipes the summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.emptyBuffer().write({ overwrite: true });\n        });\n    }\n    /**\n     * Returns the current summary buffer as a string\n     *\n     * @returns {string} string of summary buffer\n     */\n    stringify() {\n        return this._buffer;\n    }\n    /**\n     * If the summary buffer is empty\n     *\n     * @returns {boolen} true if the buffer is empty\n     */\n    isEmptyBuffer() {\n        return this._buffer.length === 0;\n    }\n    /**\n     * Resets the summary buffer without writing to summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    emptyBuffer() {\n        this._buffer = '';\n        return this;\n    }\n    /**\n     * Adds raw text to the summary buffer\n     *\n     * @param {string} text content to add\n     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addRaw(text, addEOL = false) {\n        this._buffer += text;\n        return addEOL ? this.addEOL() : this;\n    }\n    /**\n     * Adds the operating system-specific end-of-line marker to the buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addEOL() {\n        return this.addRaw(os_1.EOL);\n    }\n    /**\n     * Adds an HTML codeblock to the summary buffer\n     *\n     * @param {string} code content to render within fenced code block\n     * @param {string} lang (optional) language to syntax highlight code\n     *\n     * @returns {Summary} summary instance\n     */\n    addCodeBlock(code, lang) {\n        const attrs = Object.assign({}, (lang && { lang }));\n        const element = this.wrap('pre', this.wrap('code', code), attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML list to the summary buffer\n     *\n     * @param {string[]} items list of items to render\n     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addList(items, ordered = false) {\n        const tag = ordered ? 'ol' : 'ul';\n        const listItems = items.map(item => this.wrap('li', item)).join('');\n        const element = this.wrap(tag, listItems);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML table to the summary buffer\n     *\n     * @param {SummaryTableCell[]} rows table rows\n     *\n     * @returns {Summary} summary instance\n     */\n    addTable(rows) {\n        const tableBody = rows\n            .map(row => {\n            const cells = row\n                .map(cell => {\n                if (typeof cell === 'string') {\n                    return this.wrap('td', cell);\n                }\n                const { header, data, colspan, rowspan } = cell;\n                const tag = header ? 'th' : 'td';\n                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));\n                return this.wrap(tag, data, attrs);\n            })\n                .join('');\n            return this.wrap('tr', cells);\n        })\n            .join('');\n        const element = this.wrap('table', tableBody);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds a collapsable HTML details element to the summary buffer\n     *\n     * @param {string} label text for the closed state\n     * @param {string} content collapsable content\n     *\n     * @returns {Summary} summary instance\n     */\n    addDetails(label, content) {\n        const element = this.wrap('details', this.wrap('summary', label) + content);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML image tag to the summary buffer\n     *\n     * @param {string} src path to the image you to embed\n     * @param {string} alt text description of the image\n     * @param {SummaryImageOptions} options (optional) addition image attributes\n     *\n     * @returns {Summary} summary instance\n     */\n    addImage(src, alt, options) {\n        const { width, height } = options || {};\n        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));\n        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML section heading element\n     *\n     * @param {string} text heading text\n     * @param {number | string} [level=1] (optional) the heading level, default: 1\n     *\n     * @returns {Summary} summary instance\n     */\n    addHeading(text, level) {\n        const tag = `h${level}`;\n        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)\n            ? tag\n            : 'h1';\n        const element = this.wrap(allowedTag, text);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML thematic break (<hr>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addSeparator() {\n        const element = this.wrap('hr', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML line break (<br>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addBreak() {\n        const element = this.wrap('br', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML blockquote to the summary buffer\n     *\n     * @param {string} text quote text\n     * @param {string} cite (optional) citation url\n     *\n     * @returns {Summary} summary instance\n     */\n    addQuote(text, cite) {\n        const attrs = Object.assign({}, (cite && { cite }));\n        const element = this.wrap('blockquote', text, attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML anchor tag to the summary buffer\n     *\n     * @param {string} text link text/content\n     * @param {string} href hyperlink\n     *\n     * @returns {Summary} summary instance\n     */\n    addLink(text, href) {\n        const element = this.wrap('a', text, { href });\n        return this.addRaw(element).addEOL();\n    }\n}\nconst _summary = new Summary();\n/**\n * @deprecated use `core.summary`\n */\nexports.markdownSummary = _summary;\nexports.summary = _summary;\n//# sourceMappingURL=summary.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        file: annotationProperties.file,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BasicCredentialHandler {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    prepareRequest(options) {\n        options.headers['Authorization'] =\n            'Basic ' +\n                Buffer.from(this.username + ':' + this.password).toString('base64');\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.BasicCredentialHandler = BasicCredentialHandler;\nclass BearerCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        options.headers['Authorization'] = 'Bearer ' + this.token;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.BearerCredentialHandler = BearerCredentialHandler;\nclass PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        options.headers['Authorization'] =\n            'Basic ' + Buffer.from('PAT:' + this.token).toString('base64');\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst pm = require(\"./proxy\");\nlet tunnel;\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    let proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return new Promise(async (resolve, reject) => {\n            let output = Buffer.alloc(0);\n            this.message.on('data', (chunk) => {\n                output = Buffer.concat([output, chunk]);\n            });\n            this.message.on('end', () => {\n                resolve(output.toString());\n            });\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    let parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n    }\n    get(requestUrl, additionalHeaders) {\n        return this.request('GET', requestUrl, null, additionalHeaders || {});\n    }\n    del(requestUrl, additionalHeaders) {\n        return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return this.request('POST', requestUrl, data, additionalHeaders || {});\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return this.request('PUT', requestUrl, data, additionalHeaders || {});\n    }\n    head(requestUrl, additionalHeaders) {\n        return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return this.request(verb, requestUrl, stream, additionalHeaders);\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    async getJson(requestUrl, additionalHeaders = {}) {\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        let res = await this.get(requestUrl, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async postJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.post(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async putJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.put(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async patchJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.patch(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    async request(verb, requestUrl, data, headers) {\n        if (this._disposed) {\n            throw new Error('Client has already been disposed.');\n        }\n        let parsedUrl = new URL(requestUrl);\n        let info = this._prepareRequest(verb, parsedUrl, headers);\n        // Only perform retries on reads since writes may not be idempotent.\n        let maxTries = this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1\n            ? this._maxRetries + 1\n            : 1;\n        let numTries = 0;\n        let response;\n        while (numTries < maxTries) {\n            response = await this.requestRaw(info, data);\n            // Check if it's an authentication challenge\n            if (response &&\n                response.message &&\n                response.message.statusCode === HttpCodes.Unauthorized) {\n                let authenticationHandler;\n                for (let i = 0; i < this.handlers.length; i++) {\n                    if (this.handlers[i].canHandleAuthentication(response)) {\n                        authenticationHandler = this.handlers[i];\n                        break;\n                    }\n                }\n                if (authenticationHandler) {\n                    return authenticationHandler.handleAuthentication(this, info, data);\n                }\n                else {\n                    // We have received an unauthorized response but have no handlers to handle it.\n                    // Let the response return to the caller.\n                    return response;\n                }\n            }\n            let redirectsRemaining = this._maxRedirects;\n            while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1 &&\n                this._allowRedirects &&\n                redirectsRemaining > 0) {\n                const redirectUrl = response.message.headers['location'];\n                if (!redirectUrl) {\n                    // if there's no location to redirect to, we won't\n                    break;\n                }\n                let parsedRedirectUrl = new URL(redirectUrl);\n                if (parsedUrl.protocol == 'https:' &&\n                    parsedUrl.protocol != parsedRedirectUrl.protocol &&\n                    !this._allowRedirectDowngrade) {\n                    throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                }\n                // we need to finish reading the response before reassigning response\n                // which will leak the open socket.\n                await response.readBody();\n                // strip authorization header if redirected to a different hostname\n                if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                    for (let header in headers) {\n                        // header names are case insensitive\n                        if (header.toLowerCase() === 'authorization') {\n                            delete headers[header];\n                        }\n                    }\n                }\n                // let's make the request with the new redirectUrl\n                info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                response = await this.requestRaw(info, data);\n                redirectsRemaining--;\n            }\n            if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {\n                // If not a retry code, return immediately instead of retrying\n                return response;\n            }\n            numTries += 1;\n            if (numTries < maxTries) {\n                await response.readBody();\n                await this._performExponentialBackoff(numTries);\n            }\n        }\n        return response;\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return new Promise((resolve, reject) => {\n            let callbackForResult = function (err, res) {\n                if (err) {\n                    reject(err);\n                }\n                resolve(res);\n            };\n            this.requestRawWithCallback(info, data, callbackForResult);\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        let socket;\n        if (typeof data === 'string') {\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        let handleResult = (err, res) => {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        };\n        let req = info.httpModule.request(info.options, (msg) => {\n            let res = new HttpClientResponse(msg);\n            handleResult(null, res);\n        });\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error('Request timeout: ' + info.options.path), null);\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err, null);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        let parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            this.handlers.forEach(handler => {\n                handler.prepareRequest(info.options);\n            });\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        let proxyUrl = pm.getProxyUrl(parsedUrl);\n        let useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (!!agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (!!this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        if (useProxy) {\n            // If using proxy, need tunnel\n            if (!tunnel) {\n                tunnel = require('tunnel');\n            }\n            const agentOptions = {\n                maxSockets: maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: {\n                    ...((proxyUrl.username || proxyUrl.password) && {\n                        proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                    }),\n                    host: proxyUrl.hostname,\n                    port: proxyUrl.port\n                }\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n        return new Promise(resolve => setTimeout(() => resolve(), ms));\n    }\n    static dateTimeDeserializer(key, value) {\n        if (typeof value === 'string') {\n            let a = new Date(value);\n            if (!isNaN(a.valueOf())) {\n                return a;\n            }\n        }\n        return value;\n    }\n    async _processResponse(res, options) {\n        return new Promise(async (resolve, reject) => {\n            const statusCode = res.message.statusCode;\n            const response = {\n                statusCode: statusCode,\n                result: null,\n                headers: {}\n            };\n            // not found leads to null obj returned\n            if (statusCode == HttpCodes.NotFound) {\n                resolve(response);\n            }\n            let obj;\n            let contents;\n            // get the result from the body\n            try {\n                contents = await res.readBody();\n                if (contents && contents.length > 0) {\n                    if (options && options.deserializeDates) {\n                        obj = JSON.parse(contents, HttpClient.dateTimeDeserializer);\n                    }\n                    else {\n                        obj = JSON.parse(contents);\n                    }\n                    response.result = obj;\n                }\n                response.headers = res.message.headers;\n            }\n            catch (err) {\n                // Invalid resource (contents not json);  leaving result obj null\n            }\n            // note that 3xx redirects are handled by the http layer.\n            if (statusCode > 299) {\n                let msg;\n                // if exception/error in body, attempt to get better error\n                if (obj && obj.message) {\n                    msg = obj.message;\n                }\n                else if (contents && contents.length > 0) {\n                    // it may be the case that the exception is in the body message as string\n                    msg = contents;\n                }\n                else {\n                    msg = 'Failed request: (' + statusCode + ')';\n                }\n                let err = new HttpClientError(msg, statusCode);\n                err.result = response.result;\n                reject(err);\n            }\n            else {\n                resolve(response);\n            }\n        });\n    }\n}\nexports.HttpClient = HttpClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getProxyUrl(reqUrl) {\n    let usingSsl = reqUrl.protocol === 'https:';\n    let proxyUrl;\n    if (checkBypass(reqUrl)) {\n        return proxyUrl;\n    }\n    let proxyVar;\n    if (usingSsl) {\n        proxyVar = process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n    }\n    else {\n        proxyVar = process.env['http_proxy'] || process.env['HTTP_PROXY'];\n    }\n    if (proxyVar) {\n        proxyUrl = new URL(proxyVar);\n    }\n    return proxyUrl;\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    let noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    let upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (let upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isOptionalNumber = exports.isOptionalString = exports.CrowdinApi = exports.CrowdinValidationError = exports.CrowdinError = exports.BooleanInt = void 0;\nconst axiosProvider_1 = require(\"./internal/axios/axiosProvider\");\nconst fetchClient_1 = require(\"./internal/fetch/fetchClient\");\nconst retry_1 = require(\"./internal/retry\");\nvar BooleanInt;\n(function (BooleanInt) {\n    BooleanInt[BooleanInt[\"TRUE\"] = 1] = \"TRUE\";\n    BooleanInt[BooleanInt[\"FALSE\"] = 0] = \"FALSE\";\n})(BooleanInt = exports.BooleanInt || (exports.BooleanInt = {}));\nclass CrowdinError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nexports.CrowdinError = CrowdinError;\nclass CrowdinValidationError extends CrowdinError {\n    constructor(messsage, validationCodes) {\n        super(messsage, 400);\n        this.validationCodes = validationCodes;\n    }\n}\nexports.CrowdinValidationError = CrowdinValidationError;\nfunction handleError(error = {}) {\n    var _a, _b;\n    if (Array.isArray(error.errors)) {\n        const validationCodes = [];\n        const validationMessages = [];\n        error.errors.forEach((e) => {\n            var _a;\n            if (Array.isArray((_a = e.error) === null || _a === void 0 ? void 0 : _a.errors)) {\n                e.error.errors.forEach((er) => {\n                    if (er.message && er.code) {\n                        validationCodes.push(er.code);\n                        validationMessages.push(er.message);\n                    }\n                });\n            }\n        });\n        const message = validationMessages.length === 0 ? 'Validation error' : validationMessages.join(', ');\n        throw new CrowdinValidationError(message, validationCodes);\n    }\n    const message = ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) || 'Error occured';\n    const code = ((_b = error.error) === null || _b === void 0 ? void 0 : _b.code) || 500;\n    throw new CrowdinError(message, code);\n}\nclass CrowdinApi {\n    /**\n     * @param credentials credentials\n     * @param config optional configuration of the client\n     */\n    constructor(credentials, config) {\n        this.fetchAllFlag = false;\n        this.token = credentials.token;\n        this.organization = credentials.organization;\n        if (credentials.baseUrl) {\n            this.url = credentials.baseUrl;\n        }\n        else {\n            if (this.organization) {\n                this.url = `https://${this.organization}.${CrowdinApi.CROWDIN_URL_SUFFIX}`;\n            }\n            else {\n                this.url = `https://${CrowdinApi.CROWDIN_URL_SUFFIX}`;\n            }\n        }\n        let retryConfig;\n        if (config === null || config === void 0 ? void 0 : config.retryConfig) {\n            retryConfig = config.retryConfig;\n        }\n        else {\n            retryConfig = {\n                waitInterval: 0,\n                retries: 0,\n                conditions: [],\n            };\n        }\n        this.retryService = new retry_1.RetryService(retryConfig);\n        this.config = config;\n    }\n    addQueryParam(url, name, value) {\n        if (value) {\n            url += new RegExp(/\\?.+=.*/g).test(url) ? '&' : '?';\n            url += `${name}=${value}`;\n        }\n        return url;\n    }\n    defaultConfig() {\n        var _a, _b;\n        const config = {\n            headers: {\n                Authorization: `Bearer ${this.token}`,\n            },\n        };\n        if ((_a = this.config) === null || _a === void 0 ? void 0 : _a.userAgent) {\n            config.headers['User-Agent'] = this.config.userAgent;\n        }\n        if ((_b = this.config) === null || _b === void 0 ? void 0 : _b.integrationUserAgent) {\n            config.headers['X-Crowdin-Integrations-User-Agent'] = this.config.integrationUserAgent;\n        }\n        return config;\n    }\n    get httpClient() {\n        var _a, _b;\n        if ((_a = this.config) === null || _a === void 0 ? void 0 : _a.httpClient) {\n            return this.config.httpClient;\n        }\n        if ((_b = this.config) === null || _b === void 0 ? void 0 : _b.httpClientType) {\n            switch (this.config.httpClientType) {\n                case 'axios':\n                    return CrowdinApi.AXIOS_INSTANCE;\n                case 'fetch':\n                    return CrowdinApi.FETCH_INSTANCE;\n                default:\n                    return CrowdinApi.AXIOS_INSTANCE;\n            }\n        }\n        return CrowdinApi.AXIOS_INSTANCE;\n    }\n    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n    withFetchAll(maxLimit) {\n        this.fetchAllFlag = true;\n        this.maxLimit = maxLimit;\n        return this;\n    }\n    async getList(url, limit, offset, config) {\n        const conf = config !== null && config !== void 0 ? config : this.defaultConfig();\n        if (this.fetchAllFlag) {\n            this.fetchAllFlag = false;\n            const maxAmount = this.maxLimit;\n            this.maxLimit = undefined;\n            return await this.fetchAll(url, conf, maxAmount);\n        }\n        else {\n            url = this.addQueryParam(url, 'limit', limit);\n            url = this.addQueryParam(url, 'offset', offset);\n            return this.get(url, conf);\n        }\n    }\n    async fetchAll(url, config, maxAmount) {\n        let limit = 500;\n        if (maxAmount && maxAmount < limit) {\n            limit = maxAmount;\n        }\n        let offset = 0;\n        let resp;\n        for (;;) {\n            let urlWithPagination = this.addQueryParam(url, 'limit', limit);\n            urlWithPagination = this.addQueryParam(urlWithPagination, 'offset', offset);\n            const e = await this.get(urlWithPagination, config);\n            if (!resp) {\n                resp = e;\n            }\n            else {\n                resp.data = resp.data.concat(e.data);\n                resp.pagination.limit += e.data.length;\n            }\n            if (e.data.length < limit || (maxAmount && resp.data.length >= maxAmount)) {\n                break;\n            }\n            else {\n                offset += limit;\n            }\n            if (maxAmount && maxAmount < resp.data.length + limit) {\n                limit = maxAmount - resp.data.length;\n            }\n        }\n        return resp;\n    }\n    //Http overrides\n    get(url, config) {\n        return this.retryService.executeAsyncFunc(() => this.httpClient.get(url, config).catch(e => handleError(e)));\n    }\n    delete(url, config) {\n        return this.retryService.executeAsyncFunc(() => this.httpClient.delete(url, config).catch(e => handleError(e)));\n    }\n    head(url, config) {\n        return this.retryService.executeAsyncFunc(() => this.httpClient.head(url, config).catch(e => handleError(e)));\n    }\n    post(url, data, config) {\n        return this.retryService.executeAsyncFunc(() => this.httpClient.post(url, data, config).catch(e => handleError(e)));\n    }\n    put(url, data, config) {\n        return this.retryService.executeAsyncFunc(() => this.httpClient.put(url, data, config).catch(e => handleError(e)));\n    }\n    patch(url, data, config) {\n        return this.retryService.executeAsyncFunc(() => this.httpClient.patch(url, data, config).catch(e => handleError(e)));\n    }\n}\nexports.CrowdinApi = CrowdinApi;\nCrowdinApi.CROWDIN_URL_SUFFIX = 'api.crowdin.com/api/v2';\nCrowdinApi.AXIOS_INSTANCE = new axiosProvider_1.AxiosProvider().axios;\nCrowdinApi.FETCH_INSTANCE = new fetchClient_1.FetchClient();\nlet deprecationEmittedForOptionalParams = false;\nfunction emitDeprecationWarning() {\n    if (!deprecationEmittedForOptionalParams) {\n        if (typeof process !== 'undefined' && typeof process.emitWarning === 'function') {\n            process.emitWarning('Passing optional parameters individually is deprecated. Pass a sole object instead', 'DeprecationWarning');\n        }\n        else {\n            console.warn('DeprecationWarning: Passing optional parameters individually is deprecated. Pass a sole object instead');\n        }\n        deprecationEmittedForOptionalParams = true;\n    }\n}\nfunction isOptionalString(parameter, parameterInArgs) {\n    if (typeof parameter === 'string' || typeof parameter === 'undefined') {\n        if (parameterInArgs) {\n            emitDeprecationWarning();\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.isOptionalString = isOptionalString;\nfunction isOptionalNumber(parameter, parameterInArgs) {\n    if (typeof parameter === 'number' || typeof parameter === 'undefined') {\n        if (parameterInArgs) {\n            emitDeprecationWarning();\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.isOptionalNumber = isOptionalNumber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AxiosProvider = void 0;\nconst axios_1 = require(\"axios\");\nclass AxiosProvider {\n    constructor() {\n        this.pendingRequests = 0;\n        this.axios = axios_1.default.create({});\n        this.configureRequest();\n        this.configureResponse();\n    }\n    configureRequest() {\n        this.axios.interceptors.request.use(config => {\n            // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n            return new Promise(resolve => {\n                const interval = setInterval(() => {\n                    if (this.pendingRequests < AxiosProvider.CROWDIN_API_MAX_CONCURRENT_REQUESTS) {\n                        this.pendingRequests++;\n                        clearInterval(interval);\n                        resolve(config);\n                    }\n                }, AxiosProvider.CROWDIN_API_REQUESTS_INTERVAL_MS);\n            });\n        });\n    }\n    configureResponse() {\n        this.axios.interceptors.response.use(response => {\n            this.pendingRequests = Math.max(0, this.pendingRequests - 1);\n            return Promise.resolve(response.data);\n        }, error => {\n            this.pendingRequests = Math.max(0, this.pendingRequests - 1);\n            return Promise.reject(error.response.data);\n        });\n    }\n}\nexports.AxiosProvider = AxiosProvider;\nAxiosProvider.CROWDIN_API_MAX_CONCURRENT_REQUESTS = 15;\nAxiosProvider.CROWDIN_API_REQUESTS_INTERVAL_MS = 10;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FetchClient = void 0;\nclass FetchClient {\n    constructor() {\n        this.maxConcurrentRequests = 15;\n        this.requestIntervalMs = 10;\n        this.pendingRequests = 0;\n    }\n    get(url, config) {\n        return this.request(url, 'GET', config);\n    }\n    delete(url, config) {\n        return this.request(url, 'DELETE', config);\n    }\n    head(url, config) {\n        return this.request(url, 'HEAD', config);\n    }\n    post(url, data, config) {\n        return this.request(url, 'POST', config, data);\n    }\n    put(url, data, config) {\n        return this.request(url, 'PUT', config, data);\n    }\n    patch(url, data, config) {\n        return this.request(url, 'PATCH', config, data);\n    }\n    async request(url, method, config, data) {\n        var _a;\n        let body;\n        if (data) {\n            if (typeof data === 'object' && !this.isBuffer(data)) {\n                body = JSON.stringify(data);\n                config = config !== null && config !== void 0 ? config : { headers: {} };\n                config.headers = (_a = config.headers) !== null && _a !== void 0 ? _a : {};\n                config.headers['Content-Type'] = 'application/json';\n            }\n            else {\n                body = data;\n            }\n        }\n        await this.waitInQueue();\n        return fetch(url, {\n            method: method,\n            headers: config ? config.headers : {},\n            body: body,\n        })\n            .then(async (res) => {\n            if (res.status === 204) {\n                return {};\n            }\n            const text = await res.text();\n            const json = text ? JSON.parse(text) : {};\n            if (res.status >= 200 && res.status < 300) {\n                return json;\n            }\n            else {\n                throw json;\n            }\n        })\n            .finally(() => (this.pendingRequests = Math.max(0, this.pendingRequests - 1)));\n    }\n    isBuffer(data) {\n        if (typeof ArrayBuffer === 'function') {\n            return ArrayBuffer.isView(data);\n        }\n        else if (typeof Buffer === 'function') {\n            return Buffer.isBuffer(data);\n        }\n        else {\n            return false;\n        }\n    }\n    waitInQueue() {\n        return new Promise(resolve => {\n            const interval = setInterval(() => {\n                if (this.pendingRequests < this.maxConcurrentRequests) {\n                    this.pendingRequests++;\n                    clearInterval(interval);\n                    resolve();\n                }\n            }, this.requestIntervalMs);\n        });\n    }\n}\nexports.FetchClient = FetchClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RetryService = void 0;\nclass RetryService {\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     * @param func function to execute\n     */\n    async executeAsyncFunc(func) {\n        for (let i = 0; i <= this.config.retries; i++) {\n            try {\n                const result = await func();\n                return result;\n            }\n            catch (error) {\n                const skip = this.config.conditions.map(condition => condition.test(error)).find(skip => skip === true);\n                if (skip || i === this.config.retries) {\n                    throw error;\n                }\n                await this.wait();\n            }\n        }\n        throw new Error('Wrong retry configuration. Failed to retrieve value.');\n    }\n    /**\n     * @param func function to execute\n     */\n    async executeSyncFunc(func) {\n        for (let i = 0; i <= this.config.retries; i++) {\n            try {\n                const result = func();\n                return result;\n            }\n            catch (error) {\n                const skip = this.config.conditions.map(condition => condition.test(error)).find(skip => skip === true);\n                if (skip || i === this.config.retries) {\n                    throw error;\n                }\n                await this.wait();\n            }\n        }\n        throw new Error('Wrong retry configuration. Failed to retrieve value.');\n    }\n    wait() {\n        return new Promise((res) => {\n            setTimeout(() => res(), this.config.waitInterval);\n        });\n    }\n}\nexports.RetryService = RetryService;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dictionaries = void 0;\nconst core_1 = require(\"../core\");\nclass Dictionaries extends core_1.CrowdinApi {\n    listDictionaries(projectId, options) {\n        if ((0, core_1.isOptionalString)(options, '1' in arguments)) {\n            options = { languageIds: options };\n        }\n        let url = `${this.url}/projects/${projectId}/dictionaries`;\n        url = this.addQueryParam(url, 'languageIds', options.languageIds);\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param languageId language identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.dictionaries.patch\n     */\n    editDictionary(projectId, languageId, request) {\n        const url = `${this.url}/projects/${projectId}/dictionaries/${languageId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Dictionaries = Dictionaries;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Distributions = void 0;\nconst core_1 = require(\"../core\");\nclass Distributions extends core_1.CrowdinApi {\n    listDistributions(projectId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/distributions`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.distributions.post\n     */\n    createDistribution(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/distributions`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.distributions.get\n     */\n    getDistribution(projectId, hash) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.distributions.delete\n     */\n    deleteDistribution(projectId, hash) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.distributions.patch\n     */\n    editDistribution(projectId, hash, request) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.distributions.release.get\n     */\n    getDistributionRelease(projectId, hash) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}/release`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.distributions.release.post\n     */\n    createDistributionRelease(projectId, hash) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}/release`;\n        return this.post(url, {}, this.defaultConfig());\n    }\n}\nexports.Distributions = Distributions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Glossaries = void 0;\nconst core_1 = require(\"../core\");\nclass Glossaries extends core_1.CrowdinApi {\n    listGlossaries(options, deprecatedLimit, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = { groupId: options, limit: deprecatedLimit, offset: deprecatedOffset };\n        }\n        let url = `${this.url}/glossaries`;\n        url = this.addQueryParam(url, 'groupId', options.groupId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.post\n     */\n    addGlossary(request) {\n        const url = `${this.url}/glossaries`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param glossaryId glossary identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.get\n     */\n    getGlossary(glossaryId) {\n        const url = `${this.url}/glossaries/${glossaryId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param glossaryId glossary identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.delete\n     */\n    deleteGlossary(glossaryId) {\n        const url = `${this.url}/glossaries/${glossaryId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param glossaryId glossary identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.patch\n     */\n    editGlossary(glossaryId, request) {\n        const url = `${this.url}/glossaries/${glossaryId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param glossaryId glossary identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.exports.post\n     */\n    exportGlossary(glossaryId, request) {\n        const url = `${this.url}/glossaries/${glossaryId}/exports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param glossaryId glossary identifier\n     * @param exportId export identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.exports.get\n     */\n    checkGlossaryExportStatus(glossaryId, exportId) {\n        const url = `${this.url}/glossaries/${glossaryId}/exports/${exportId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param glossaryId glossary identifier\n     * @param exportId export identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.exports.download.download\n     */\n    downloadGlossary(glossaryId, exportId) {\n        const url = `${this.url}/glossaries/${glossaryId}/exports/${exportId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param glossaryId glossary identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.imports.post\n     */\n    importGlossaryFile(glossaryId, request) {\n        const url = `${this.url}/glossaries/${glossaryId}/imports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param glossaryId glossary identifier\n     * @param importId import identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.imports.get\n     */\n    checkGlossaryImportStatus(glossaryId, importId) {\n        const url = `${this.url}/glossaries/${glossaryId}/imports/${importId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    listTerms(glossaryId, options, deprecatedLimit, deprecatedOffset, deprecatedLanguageId, deprecatedTranslationOfTermId) {\n        let url = `${this.url}/glossaries/${glossaryId}/terms`;\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = {\n                userId: options,\n                limit: deprecatedLimit,\n                offset: deprecatedOffset,\n                languageId: deprecatedLanguageId,\n                translationOfTermId: deprecatedTranslationOfTermId,\n            };\n        }\n        url = this.addQueryParam(url, 'userId', options.userId);\n        url = this.addQueryParam(url, 'languageId', options.languageId);\n        url = this.addQueryParam(url, 'translationOfTermId', options.translationOfTermId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param glossaryId glossary identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.terms.post\n     */\n    addTerm(glossaryId, request) {\n        const url = `${this.url}/glossaries/${glossaryId}/terms`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    clearGlossary(glossaryId, options, deprecatedTranslationOfTermId) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { languageId: options, translationOfTermId: deprecatedTranslationOfTermId };\n        }\n        let url = `${this.url}/glossaries/${glossaryId}/terms`;\n        url = this.addQueryParam(url, 'languageId', options.languageId);\n        url = this.addQueryParam(url, 'translationOfTermId', options.translationOfTermId);\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param glossaryId glossary identifier\n     * @param termId term identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.terms.get\n     */\n    getTerm(glossaryId, termId) {\n        const url = `${this.url}/glossaries/${glossaryId}/terms/${termId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param glossaryId glossary identifier\n     * @param termId term identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.terms.delete\n     */\n    deleteTerm(glossaryId, termId) {\n        const url = `${this.url}/glossaries/${glossaryId}/terms/${termId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param glossaryId glossary identifier\n     * @param termId term identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.glossaries.terms.patch\n     */\n    editTerm(glossaryId, termId, request) {\n        const url = `${this.url}/glossaries/${glossaryId}/terms/${termId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Glossaries = Glossaries;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dictionaries_1 = require(\"./dictionaries\");\nconst distributions_1 = require(\"./distributions\");\nconst glossaries_1 = require(\"./glossaries\");\nconst issues_1 = require(\"./issues\");\nconst labels_1 = require(\"./labels\");\nconst languages_1 = require(\"./languages\");\nconst machineTranslation_1 = require(\"./machineTranslation\");\nconst projectsGroups_1 = require(\"./projectsGroups\");\nconst reports_1 = require(\"./reports\");\nconst screenshots_1 = require(\"./screenshots\");\nconst sourceFiles_1 = require(\"./sourceFiles\");\nconst sourceStrings_1 = require(\"./sourceStrings\");\nconst stringComments_1 = require(\"./stringComments\");\nconst stringTranslations_1 = require(\"./stringTranslations\");\nconst tasks_1 = require(\"./tasks\");\nconst teams_1 = require(\"./teams\");\nconst translationMemory_1 = require(\"./translationMemory\");\nconst translations_1 = require(\"./translations\");\nconst translationStatus_1 = require(\"./translationStatus\");\nconst uploadStorage_1 = require(\"./uploadStorage\");\nconst users_1 = require(\"./users\");\nconst vendors_1 = require(\"./vendors\");\nconst webhooks_1 = require(\"./webhooks\");\nconst workflows_1 = require(\"./workflows\");\n__exportStar(require(\"./core\"), exports);\n__exportStar(require(\"./dictionaries\"), exports);\n__exportStar(require(\"./distributions\"), exports);\n__exportStar(require(\"./glossaries\"), exports);\n__exportStar(require(\"./issues\"), exports);\n__exportStar(require(\"./labels\"), exports);\n__exportStar(require(\"./languages\"), exports);\n__exportStar(require(\"./machineTranslation\"), exports);\n__exportStar(require(\"./projectsGroups\"), exports);\n__exportStar(require(\"./reports\"), exports);\n__exportStar(require(\"./screenshots\"), exports);\n__exportStar(require(\"./sourceFiles\"), exports);\n__exportStar(require(\"./sourceStrings\"), exports);\n__exportStar(require(\"./stringComments\"), exports);\n__exportStar(require(\"./stringTranslations\"), exports);\n__exportStar(require(\"./tasks\"), exports);\n__exportStar(require(\"./teams\"), exports);\n__exportStar(require(\"./translationMemory\"), exports);\n__exportStar(require(\"./translations\"), exports);\n__exportStar(require(\"./translationStatus\"), exports);\n__exportStar(require(\"./uploadStorage\"), exports);\n__exportStar(require(\"./users\"), exports);\n__exportStar(require(\"./vendors\"), exports);\n__exportStar(require(\"./webhooks\"), exports);\n__exportStar(require(\"./workflows\"), exports);\nclass Client {\n    constructor(credentials, config) {\n        this.sourceFilesApi = new sourceFiles_1.SourceFiles(credentials, config);\n        this.glossariesApi = new glossaries_1.Glossaries(credentials, config);\n        this.languagesApi = new languages_1.Languages(credentials, config);\n        this.translationsApi = new translations_1.Translations(credentials, config);\n        this.translationStatusApi = new translationStatus_1.TranslationStatus(credentials, config);\n        this.projectsGroupsApi = new projectsGroups_1.ProjectsGroups(credentials, config);\n        this.reportsApi = new reports_1.Reports(credentials, config);\n        this.screenshotsApi = new screenshots_1.Screenshots(credentials, config);\n        this.sourceStringsApi = new sourceStrings_1.SourceStrings(credentials, config);\n        this.uploadStorageApi = new uploadStorage_1.UploadStorage(credentials, config);\n        this.tasksApi = new tasks_1.Tasks(credentials, config);\n        this.translationMemoryApi = new translationMemory_1.TranslationMemory(credentials, config);\n        this.webhooksApi = new webhooks_1.Webhooks(credentials, config);\n        this.machineTranslationApi = new machineTranslation_1.MachineTranslation(credentials, config);\n        this.stringTranslationsApi = new stringTranslations_1.StringTranslations(credentials, config);\n        this.workflowsApi = new workflows_1.Workflows(credentials, config);\n        this.usersApi = new users_1.Users(credentials, config);\n        this.vendorsApi = new vendors_1.Vendors(credentials, config);\n        this.issuesApi = new issues_1.Issues(credentials, config);\n        this.teamsApi = new teams_1.Teams(credentials, config);\n        this.distributionsApi = new distributions_1.Distributions(credentials, config);\n        this.dictionariesApi = new dictionaries_1.Dictionaries(credentials, config);\n        this.labelsApi = new labels_1.Labels(credentials, config);\n        this.stringCommentsApi = new stringComments_1.StringComments(credentials, config);\n    }\n}\nexports.default = Client;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Issues = void 0;\nconst core_1 = require(\"../core\");\n/**\n * @deprecated\n */\nclass Issues extends core_1.CrowdinApi {\n    listReportedIssues(projectId, options, deprecatedOffset, deprecatedType, deprecatedStatus) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = {\n                limit: options,\n                offset: deprecatedOffset,\n                type: deprecatedType,\n                status: deprecatedStatus,\n            };\n        }\n        let url = `${this.url}/projects/${projectId}/issues`;\n        url = this.addQueryParam(url, 'type', options.type);\n        url = this.addQueryParam(url, 'status', options.status);\n        return this.getList(url, options.limit, deprecatedOffset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param issueId issue identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.issues.patch\n     */\n    editIssue(projectId, issueId, request) {\n        const url = `${this.url}/projects/${projectId}/issues/${issueId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Issues = Issues;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Labels = void 0;\nconst core_1 = require(\"../core\");\nclass Labels extends core_1.CrowdinApi {\n    listLabels(projectId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/labels`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.labels.post\n     */\n    addLabel(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/labels`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.labels.get\n     */\n    getLabel(projectId, labelId) {\n        const url = `${this.url}/projects/${projectId}/labels/${labelId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.labels.delete\n     */\n    deleteLabel(projectId, labelId) {\n        const url = `${this.url}/projects/${projectId}/labels/${labelId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.labels.patch\n     */\n    editLabel(projectId, labelId, request) {\n        const url = `${this.url}/projects/${projectId}/labels/${labelId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.labels.strings.post\n     */\n    assignLabelToString(projectId, labelId, request) {\n        const url = `${this.url}/projects/${projectId}/labels/${labelId}/strings`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @param stringIds string identifiers\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.labels.strings.deleteMany\n     */\n    unassignLabelFromString(projectId, labelId, stringIds) {\n        let url = `${this.url}/projects/${projectId}/labels/${labelId}/strings`;\n        url = this.addQueryParam(url, 'stringIds', stringIds);\n        return this.delete(url, this.defaultConfig());\n    }\n}\nexports.Labels = Labels;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Languages = void 0;\nconst core_1 = require(\"../core\");\nclass Languages extends core_1.CrowdinApi {\n    listSupportedLanguages(options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/languages`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.languages.post\n     */\n    addCustomLanguage(request) {\n        const url = `${this.url}/languages`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param languageId language identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.languages.get\n     */\n    getLanguage(languageId) {\n        const url = `${this.url}/languages/${languageId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param languageId language identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.languages.delete\n     */\n    deleteCustomLanguage(languageId) {\n        const url = `${this.url}/languages/${languageId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param languageId language identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.languages.patch\n     */\n    editCustomLanguage(languageId, request) {\n        const url = `${this.url}/languages/${languageId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Languages = Languages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MachineTranslation = void 0;\nconst core_1 = require(\"../core\");\nclass MachineTranslation extends core_1.CrowdinApi {\n    listMts(options, deprecatedLimit, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = { groupId: options, limit: deprecatedLimit, offset: deprecatedOffset };\n        }\n        let url = `${this.url}/mts`;\n        url = this.addQueryParam(url, 'groupId', options.groupId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.mts.post\n     */\n    createMt(request) {\n        const url = `${this.url}/mts`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.mts.getMany\n     */\n    getMt(mtId) {\n        const url = `${this.url}/mts/${mtId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.mts.delete\n     */\n    deleteMt(mtId) {\n        const url = `${this.url}/mts/${mtId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.mts.patch\n     */\n    updateMt(mtId, request) {\n        const url = `${this.url}/mts/${mtId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.mts.translations.post\n     */\n    translate(mtId, request) {\n        const url = `${this.url}/mts/${mtId}/translations`;\n        return this.post(url, request, this.defaultConfig());\n    }\n}\nexports.MachineTranslation = MachineTranslation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectsGroupsModel = exports.ProjectsGroups = void 0;\nconst core_1 = require(\"../core\");\nclass ProjectsGroups extends core_1.CrowdinApi {\n    listGroups(options, deprecatedOffset, deprecatedUserId, deprecatedLimit) {\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = {\n                parentId: options,\n                offset: deprecatedOffset,\n                userId: deprecatedUserId,\n                limit: deprecatedLimit,\n            };\n        }\n        let url = `${this.url}/groups`;\n        url = this.addQueryParam(url, 'parentId', options.parentId);\n        url = this.addQueryParam(url, 'userId', options.userId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.post\n     */\n    addGroup(request) {\n        const url = `${this.url}/groups`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param group group identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.get\n     */\n    getGroup(groupId) {\n        const url = `${this.url}/groups/${groupId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.delete\n     */\n    deleteGroup(groupId) {\n        const url = `${this.url}/groups/${groupId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.patch\n     */\n    editGroup(groupId, request) {\n        const url = `${this.url}/groups/${groupId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    listProjects(options, deprecatedHasManagerAccess, deprecatedLimit, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = {\n                groupId: options,\n                hasManagerAccess: deprecatedHasManagerAccess,\n                limit: deprecatedLimit,\n                offset: deprecatedOffset,\n            };\n        }\n        let url = `${this.url}/projects`;\n        url = this.addQueryParam(url, 'groupId', options.groupId);\n        url = this.addQueryParam(url, 'hasManagerAccess', options.hasManagerAccess);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.post\n     */\n    addProject(request) {\n        const url = `${this.url}/projects`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.get\n     */\n    getProject(projectId) {\n        const url = `${this.url}/projects/${projectId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.delete\n     */\n    deleteProject(projectId) {\n        const url = `${this.url}/projects/${projectId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.patch\n     */\n    editProject(projectId, request) {\n        const url = `${this.url}/projects/${projectId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.ProjectsGroups = ProjectsGroups;\nvar ProjectsGroupsModel;\n(function (ProjectsGroupsModel) {\n    let Type;\n    (function (Type) {\n        Type[Type[\"FILES_BASED\"] = 0] = \"FILES_BASED\";\n        Type[Type[\"STRINGS_BASED\"] = 1] = \"STRINGS_BASED\";\n    })(Type = ProjectsGroupsModel.Type || (ProjectsGroupsModel.Type = {}));\n    let TranslateDuplicates;\n    (function (TranslateDuplicates) {\n        TranslateDuplicates[TranslateDuplicates[\"SHOW\"] = 0] = \"SHOW\";\n        TranslateDuplicates[TranslateDuplicates[\"HIDE_REGULAR_DETECTION\"] = 1] = \"HIDE_REGULAR_DETECTION\";\n        TranslateDuplicates[TranslateDuplicates[\"SHOW_AUTO_TRANSLATE\"] = 2] = \"SHOW_AUTO_TRANSLATE\";\n        TranslateDuplicates[TranslateDuplicates[\"SHOW_WITHIN_VERION_BRANCH_REGULAR_DETECTION\"] = 3] = \"SHOW_WITHIN_VERION_BRANCH_REGULAR_DETECTION\";\n        TranslateDuplicates[TranslateDuplicates[\"HIDE_STRICT_DETECTION\"] = 4] = \"HIDE_STRICT_DETECTION\";\n        TranslateDuplicates[TranslateDuplicates[\"SHOW_WITHIN_VERION_BRANCH_STRICT_DETECTION\"] = 5] = \"SHOW_WITHIN_VERION_BRANCH_STRICT_DETECTION\";\n    })(TranslateDuplicates = ProjectsGroupsModel.TranslateDuplicates || (ProjectsGroupsModel.TranslateDuplicates = {}));\n})(ProjectsGroupsModel = exports.ProjectsGroupsModel || (exports.ProjectsGroupsModel = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Reports = void 0;\nconst core_1 = require(\"../core\");\nclass Reports extends core_1.CrowdinApi {\n    /**\n     * @param groupId group identifier\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.reports.post\n     */\n    generateGroupReport(groupId, request) {\n        const url = `${this.url}/groups/${groupId}/reports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @param reportId report identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.reports.get\n     */\n    checkGroupReportStatus(groupId, reportId) {\n        const url = `${this.url}/groups/${groupId}/reports/${reportId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @param reportId report identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.reports.download.download\n     */\n    downloadGroupReport(groupId, reportId) {\n        const url = `${this.url}/groups/${groupId}/reports/${reportId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.reports.post\n     */\n    generateOrganizationReport(request) {\n        const url = `${this.url}/reports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param reportId report identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.reports.get\n     */\n    checkOrganizationReportStatus(reportId) {\n        const url = `${this.url}/reports/${reportId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param reportId report identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.reports.download.download\n     */\n    downloadOrganizationReport(reportId) {\n        const url = `${this.url}/reports/${reportId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.reports.post\n     */\n    generateReport(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/reports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param reportId report identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.reports.get\n     */\n    checkReportStatus(projectId, reportId) {\n        const url = `${this.url}/projects/${projectId}/reports/${reportId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param reportId report identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.reports.download.download\n     */\n    downloadReport(projectId, reportId) {\n        const url = `${this.url}/projects/${projectId}/reports/${reportId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n}\nexports.Reports = Reports;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Screenshots = void 0;\nconst core_1 = require(\"../core\");\nclass Screenshots extends core_1.CrowdinApi {\n    listScreenshots(projectId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/screenshots`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.screenshots.post\n     */\n    addScreenshot(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/screenshots`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.screenshots.get\n     */\n    getScreenshot(projectId, screenshotId) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.screenshots.put\n     */\n    updateScreenshot(projectId, screenshotId, request) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}`;\n        return this.put(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.screenshots.delete\n     */\n    deleteScreenshot(projectId, screenshotId) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.screenshots.patch\n     */\n    editScreenshot(projectId, screenshotId, request) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    listScreenshotTags(projectId, screenshotId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '2' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.putMany\n     */\n    replaceTags(projectId, screenshotId, request) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags`;\n        return this.put(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.post\n     */\n    addTag(projectId, screenshotId, request) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.deleteMany\n     */\n    clearTags(projectId, screenshotId) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param tagId tag identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.get\n     */\n    getTag(projectId, screenshotId, tagId) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags/${tagId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param tagId tag identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.delete\n     */\n    deleteTag(projectId, screenshotId, tagId) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags/${tagId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param tagId tag identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.patch\n     */\n    updateTag(projectId, screenshotId, tagId, request) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags/${tagId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Screenshots = Screenshots;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SourceFilesModel = exports.SourceFiles = void 0;\nconst core_1 = require(\"../core\");\nclass SourceFiles extends core_1.CrowdinApi {\n    listProjectBranches(projectId, options, deprecatedLimit, deprecatedOffset) {\n        if ((0, core_1.isOptionalString)(options, '1' in arguments)) {\n            options = { name: options, limit: deprecatedLimit, offset: deprecatedOffset };\n        }\n        let url = `${this.url}/projects/${projectId}/branches`;\n        url = this.addQueryParam(url, 'name', options.name);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.branches.post\n     */\n    createBranch(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/branches`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.branches.get\n     */\n    getBranch(projectId, branchId) {\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.branches.delete\n     */\n    deleteBranch(projectId, branchId) {\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.branches.patch\n     */\n    editBranch(projectId, branchId, request) {\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    listProjectDirectories(projectId, options, deprecatedDirectoryId, deprecatedLimit, deprecatedOffset, deprecatedFilter, deprecatedRecursion) {\n        let url = `${this.url}/projects/${projectId}/directories`;\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = {\n                branchId: options,\n                directoryId: deprecatedDirectoryId,\n                limit: deprecatedLimit,\n                offset: deprecatedOffset,\n                recursion: deprecatedRecursion,\n                filter: deprecatedFilter,\n            };\n        }\n        url = this.addQueryParam(url, 'branchId', options.branchId);\n        url = this.addQueryParam(url, 'directoryId', options.directoryId);\n        url = this.addQueryParam(url, 'filter', options.filter);\n        url = this.addQueryParam(url, 'recursion', options.recursion);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.directories.post\n     */\n    createDirectory(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/directories`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.directories.get\n     */\n    getDirectory(projectId, directoryId) {\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.directories.delete\n     */\n    deleteDirectory(projectId, directoryId) {\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.directories.patch\n     */\n    editDirectory(projectId, directoryId, request) {\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    listProjectFiles(projectId, options, deprecatedDirectoryId, deprecatedLimit, deprecatedOffset, deprecatedRecursion, deprecatedFilter) {\n        let url = `${this.url}/projects/${projectId}/files`;\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = {\n                branchId: options,\n                directoryId: deprecatedDirectoryId,\n                limit: deprecatedLimit,\n                offset: deprecatedOffset,\n                recursion: deprecatedRecursion,\n                filter: deprecatedFilter,\n            };\n        }\n        url = this.addQueryParam(url, 'branchId', options.branchId);\n        url = this.addQueryParam(url, 'directoryId', options.directoryId);\n        url = this.addQueryParam(url, 'recursion', options.recursion);\n        url = this.addQueryParam(url, 'filter', options.filter);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.files.post\n     */\n    createFile(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/files`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.files.get\n     */\n    getFile(projectId, fileId) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.files.put\n     */\n    updateOrRestoreFile(projectId, fileId, request) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n        return this.put(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.files.delete\n     */\n    deleteFile(projectId, fileId) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.files.patch\n     */\n    editFile(projectId, fileId, request) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.files.download.get\n     */\n    downloadFile(projectId, fileId) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    listFileRevisions(projectId, fileId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '2' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/revisions`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param revisionId revision identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.files.revisions.get\n     */\n    getFileRevision(projectId, fileId, revisionId) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/revisions/${revisionId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    listReviewedSourceFilesBuild(projectId, options, deprecatedLimit, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { branchId: options, limit: deprecatedLimit, offset: deprecatedOffset };\n        }\n        let url = `${this.url}/projects/${projectId}/strings/reviewed-builds`;\n        url = this.addQueryParam(url, 'branchId', options.branchId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.projects.strings.reviewed-builds.post\n     */\n    buildReviewedSourceFiles(projectId, request = {}) {\n        const url = `${this.url}/projects/${projectId}/strings/reviewed-builds`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.projects.strings.reviewed-builds.get\n     */\n    checkReviewedSourceFilesBuildStatus(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/strings/reviewed-builds/${buildId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.projects.strings.reviewed-builds.download.download\n     */\n    downloadReviewedSourceFiles(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/strings/reviewed-builds/${buildId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n}\nexports.SourceFiles = SourceFiles;\nvar SourceFilesModel;\n(function (SourceFilesModel) {\n    let EscapeQuotes;\n    (function (EscapeQuotes) {\n        EscapeQuotes[EscapeQuotes[\"ZERO\"] = 0] = \"ZERO\";\n        EscapeQuotes[EscapeQuotes[\"ONE\"] = 1] = \"ONE\";\n        EscapeQuotes[EscapeQuotes[\"TWO\"] = 2] = \"TWO\";\n        EscapeQuotes[EscapeQuotes[\"THREE\"] = 3] = \"THREE\";\n    })(EscapeQuotes = SourceFilesModel.EscapeQuotes || (SourceFilesModel.EscapeQuotes = {}));\n})(SourceFilesModel = exports.SourceFilesModel || (exports.SourceFilesModel = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SourceStringsModel = exports.SourceStrings = void 0;\nconst core_1 = require(\"../core\");\nclass SourceStrings extends core_1.CrowdinApi {\n    listProjectStrings(projectId, options, deprecatedLimit, deprecatedOffset, deprecatedFilter, deprecatedDenormalizePlaceholders, deprecatedLabelIds, deprecatedScope, deprecatedCroql, deprecatedBranchId, deprecatedDirectoryId) {\n        let url = `${this.url}/projects/${projectId}/strings`;\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = {\n                fileId: options,\n                limit: deprecatedLimit,\n                offset: deprecatedOffset,\n                filter: deprecatedFilter,\n                denormalizePlaceholders: deprecatedDenormalizePlaceholders,\n                labelIds: deprecatedLabelIds,\n                scope: deprecatedScope,\n                croql: deprecatedCroql,\n                branchId: deprecatedBranchId,\n                directoryId: deprecatedDirectoryId,\n            };\n        }\n        url = this.addQueryParam(url, 'fileId', options.fileId);\n        url = this.addQueryParam(url, 'filter', options.filter);\n        url = this.addQueryParam(url, 'denormalizePlaceholders', options.denormalizePlaceholders);\n        url = this.addQueryParam(url, 'labelIds', options.labelIds);\n        url = this.addQueryParam(url, 'scope', options.scope);\n        url = this.addQueryParam(url, 'croql', options.croql);\n        url = this.addQueryParam(url, 'branchId', options.branchId);\n        url = this.addQueryParam(url, 'directoryId', options.directoryId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.strings.post\n     */\n    addString(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/strings`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.strings.get\n     */\n    getString(projectId, stringId) {\n        const url = `${this.url}/projects/${projectId}/strings/${stringId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.strings.delete\n     */\n    deleteString(projectId, stringId) {\n        const url = `${this.url}/projects/${projectId}/strings/${stringId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.strings.patch\n     */\n    editString(projectId, stringId, request) {\n        const url = `${this.url}/projects/${projectId}/strings/${stringId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.SourceStrings = SourceStrings;\nvar SourceStringsModel;\n(function (SourceStringsModel) {\n    let Type;\n    (function (Type) {\n        Type[Type[\"TEXT\"] = 0] = \"TEXT\";\n        Type[Type[\"ASSET\"] = 1] = \"ASSET\";\n        Type[Type[\"ICU\"] = 2] = \"ICU\";\n    })(Type = SourceStringsModel.Type || (SourceStringsModel.Type = {}));\n})(SourceStringsModel = exports.SourceStringsModel || (exports.SourceStringsModel = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringComments = void 0;\nconst core_1 = require(\"../core\");\nclass StringComments extends core_1.CrowdinApi {\n    listStringComments(projectId, options, deprecatedType, deprecatedTargetLanguageId, deprecatedIssueType, deprecatedIssueStatus) {\n        let url = `${this.url}/projects/${projectId}/comments`;\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = {\n                stringId: options,\n                type: deprecatedType,\n                targetLanguageId: deprecatedTargetLanguageId,\n                issueStatus: deprecatedIssueStatus,\n                issueType: deprecatedIssueType,\n            };\n        }\n        url = this.addQueryParam(url, 'stringId', options.stringId);\n        url = this.addQueryParam(url, 'type', options.type);\n        url = this.addQueryParam(url, 'targetLanguageId', options.targetLanguageId);\n        url = this.addQueryParam(url, 'issueType', options.issueType);\n        url = this.addQueryParam(url, 'issueStatus', options.issueStatus);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.comments.post\n     */\n    addStringComment(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/comments`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringCommentId string comment identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.comments.get\n     */\n    getStringComment(projectId, stringCommentId) {\n        const url = `${this.url}/projects/${projectId}/comments/${stringCommentId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringCommentId string comment identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.comments.delete\n     */\n    deleteStringComment(projectId, stringCommentId) {\n        const url = `${this.url}/projects/${projectId}/comments/${stringCommentId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringCommentId string comment identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.comments.patch\n     */\n    editStringComment(projectId, stringCommentId, request) {\n        const url = `${this.url}/projects/${projectId}/comments/${stringCommentId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.StringComments = StringComments;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringTranslations = void 0;\nconst core_1 = require(\"../core\");\nclass StringTranslations extends core_1.CrowdinApi {\n    listTranslationApprovals(projectId, options, deprecatedLanguageId, deprecatedTranslationId, deprecatedLimit, deprecatedOffset, deprecatedFileId) {\n        let url = `${this.url}/projects/${projectId}/approvals`;\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = {\n                stringId: options,\n                languageId: deprecatedLanguageId,\n                translationId: deprecatedTranslationId,\n                limit: deprecatedLimit,\n                offset: deprecatedOffset,\n                fileId: deprecatedFileId,\n            };\n        }\n        url = this.addQueryParam(url, 'stringId', options.stringId);\n        url = this.addQueryParam(url, 'languageId', options.languageId);\n        url = this.addQueryParam(url, 'translationId', options.translationId);\n        url = this.addQueryParam(url, 'fileId', options.fileId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.approvals.post\n     */\n    addApproval(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/approvals`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param approvalId approval identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.approvals.get\n     */\n    approvalInfo(projectId, approvalId) {\n        const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param approvalId approval identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.approvals.delete\n     */\n    removeApproval(projectId, approvalId) {\n        const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    listLanguageTranslations(projectId, languageId, options, fileId, limit, offset, labelIds, denormalizePlaceholders, croql) {\n        let url = `${this.url}/projects/${projectId}/languages/${languageId}/translations`;\n        if ((0, core_1.isOptionalString)(options, '2' in arguments)) {\n            options = {\n                stringIds: options,\n                fileId,\n                limit,\n                offset,\n                labelIds,\n                denormalizePlaceholders,\n                croql,\n            };\n        }\n        url = this.addQueryParam(url, 'stringIds', options.stringIds);\n        url = this.addQueryParam(url, 'fileId', options.fileId);\n        url = this.addQueryParam(url, 'labelIds', options.labelIds);\n        url = this.addQueryParam(url, 'denormalizePlaceholders', options.denormalizePlaceholders);\n        url = this.addQueryParam(url, 'croql', options.croql);\n        return this.getList(url, options.limit, options.offset);\n    }\n    listStringTranslations(projectId, stringId, languageId, options, deprecatedOffset, deprecatedDenormalizePlaceholders) {\n        if ((0, core_1.isOptionalNumber)(options, '3' in arguments)) {\n            options = {\n                limit: options,\n                offset: deprecatedOffset,\n                denormalizePlaceholders: deprecatedDenormalizePlaceholders,\n            };\n        }\n        let url = `${this.url}/projects/${projectId}/translations`;\n        url = this.addQueryParam(url, 'stringId', stringId);\n        url = this.addQueryParam(url, 'languageId', languageId);\n        url = this.addQueryParam(url, 'denormalizePlaceholders', options.denormalizePlaceholders);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.post\n     */\n    addTranslation(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/translations`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.deleteMany\n     */\n    deleteAllTranslations(projectId, stringId, languageId) {\n        let url = `${this.url}/projects/${projectId}/translations`;\n        url = this.addQueryParam(url, 'stringId', stringId);\n        url = this.addQueryParam(url, 'languageId', languageId);\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translationId translation identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.get\n     */\n    translationInfo(projectId, translationId) {\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translation translation identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.put\n     */\n    restoreTranslation(projectId, translationId) {\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}/restore`;\n        return this.put(url, {}, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translation translation identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.delete\n     */\n    deleteTranslation(projectId, translationId) {\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    listTranslationVotes(projectId, options, deprecatedLanguageId, deprecatedTranslationId, deprecatedLimit, deprecatedOffset) {\n        let url = `${this.url}/projects/${projectId}/votes`;\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = {\n                stringId: options,\n                languageId: deprecatedLanguageId,\n                translationId: deprecatedTranslationId,\n                limit: deprecatedLimit,\n                offset: deprecatedOffset,\n            };\n        }\n        url = this.addQueryParam(url, 'stringId', options.stringId);\n        url = this.addQueryParam(url, 'languageId', options.languageId);\n        url = this.addQueryParam(url, 'translationId', options.translationId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.votes.post\n     */\n    addVote(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/votes`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param voteId vote identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.votes.get\n     */\n    voteInfo(projectId, voteId) {\n        const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param voteId vote identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.votes.delete\n     */\n    cancelVote(projectId, voteId) {\n        const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n}\nexports.StringTranslations = StringTranslations;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TasksModel = exports.Tasks = void 0;\nconst core_1 = require(\"../core\");\nclass Tasks extends core_1.CrowdinApi {\n    listTasks(projectId, options, deprecatedOffset, deprecatedStatus) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset, status: deprecatedStatus };\n        }\n        let url = `${this.url}/projects/${projectId}/tasks`;\n        url = this.addQueryParam(url, 'status', options.status);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.tasks.post\n     */\n    addTask(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/tasks`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.tasks.exports.post\n     */\n    exportTaskStrings(projectId, taskId) {\n        const url = `${this.url}/projects/${projectId}/tasks/${taskId}/exports`;\n        return this.post(url, {}, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.tasks.get\n     */\n    getTask(projectId, taskId) {\n        const url = `${this.url}/projects/${projectId}/tasks/${taskId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.tasks.delete\n     */\n    deleteTask(projectId, taskId) {\n        const url = `${this.url}/projects/${projectId}/tasks/${taskId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.tasks.patch\n     */\n    editTask(projectId, taskId, request) {\n        const url = `${this.url}/projects/${projectId}/tasks/${taskId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    listUserTasks(options, deprecatedOffset, deprecatedStatus, deprecatedIsArchived) {\n        let url = `${this.url}/user/tasks`;\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = {\n                limit: options,\n                offset: deprecatedOffset,\n                status: deprecatedStatus,\n                isArchived: deprecatedIsArchived,\n            };\n        }\n        url = this.addQueryParam(url, 'status', options.status);\n        url = this.addQueryParam(url, 'isArchived', options.isArchived);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.user.tasks.patch\n     */\n    editTaskArchivedStatus(projectId, taskId, request) {\n        let url = `${this.url}/user/tasks/${taskId}`;\n        url = this.addQueryParam(url, 'projectId', projectId);\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Tasks = Tasks;\nvar TasksModel;\n(function (TasksModel) {\n    let Type;\n    (function (Type) {\n        Type[Type[\"TRANSLATE\"] = 0] = \"TRANSLATE\";\n        Type[Type[\"PROOFREAD\"] = 1] = \"PROOFREAD\";\n        Type[Type[\"TRANSLATE_BY_VENDOR\"] = 2] = \"TRANSLATE_BY_VENDOR\";\n    })(Type = TasksModel.Type || (TasksModel.Type = {}));\n})(TasksModel = exports.TasksModel || (exports.TasksModel = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Teams = void 0;\nconst core_1 = require(\"../core\");\nclass Teams extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.projects.teams.post\n     */\n    addTeamToProject(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/teams`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    listTeams(options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/teams`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.teams.post\n     */\n    addTeam(request) {\n        const url = `${this.url}/teams`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.teams.get\n     */\n    getTeam(teamId) {\n        const url = `${this.url}/teams/${teamId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.teams.delete\n     */\n    deleteTeam(teamId) {\n        const url = `${this.url}/teams/${teamId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.teams.patch\n     */\n    editTeam(teamId, request) {\n        const url = `${this.url}/teams/${teamId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    teamMembersList(teamId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/teams/${teamId}/members`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param teamId team identifier\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.teams.members.post\n     */\n    addTeamMembers(teamId, request) {\n        const url = `${this.url}/teams/${teamId}/members`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.teams.members.deleteMany\n     */\n    deleteAllTeamMembers(teamId) {\n        const url = `${this.url}/teams/${teamId}/members`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @param memberId member identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.teams.members.delete\n     */\n    deleteTeamMember(teamId, memberId) {\n        const url = `${this.url}/teams/${teamId}/members/${memberId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n}\nexports.Teams = Teams;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationMemory = void 0;\nconst core_1 = require(\"../core\");\nclass TranslationMemory extends core_1.CrowdinApi {\n    listTm(options, deprecatedLimit, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = { groupId: options, limit: deprecatedLimit, offset: deprecatedOffset };\n        }\n        let url = `${this.url}/tms`;\n        url = this.addQueryParam(url, 'groupId', options.groupId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.tms.post\n     */\n    addTm(request) {\n        const url = `${this.url}/tms`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.tms.get\n     */\n    getTm(tmId) {\n        const url = `${this.url}/tms/${tmId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.tms.delete\n     */\n    deleteTm(tmId) {\n        const url = `${this.url}/tms/${tmId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.tms.patch\n     */\n    editTm(tmId, request) {\n        const url = `${this.url}/tms/${tmId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.tms.segments.clear\n     */\n    clearTm(tmId) {\n        const url = `${this.url}/tms/${tmId}/segments`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.tms.exports.post\n     */\n    exportTm(tmId, request = {}) {\n        const url = `${this.url}/tms/${tmId}/exports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @param exportId export identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.tms.exports.get\n     */\n    checkExportStatus(tmId, exportId) {\n        const url = `${this.url}/tms/${tmId}/exports/${exportId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @param exportId export identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.tms.exports.download.download\n     */\n    downloadTm(tmId, exportId) {\n        const url = `${this.url}/tms/${tmId}/exports/${exportId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.tms.imports.post\n     */\n    importTm(tmId, request) {\n        const url = `${this.url}/tms/${tmId}/imports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @param importId import identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.tms.imports.get\n     */\n    checkImportStatus(tmId, importId) {\n        const url = `${this.url}/tms/${tmId}/imports/${importId}`;\n        return this.get(url, this.defaultConfig());\n    }\n}\nexports.TranslationMemory = TranslationMemory;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationStatus = void 0;\nconst core_1 = require(\"../core\");\nclass TranslationStatus extends core_1.CrowdinApi {\n    getBranchProgress(projectId, branchId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '2' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}/languages/progress`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    getDirectoryProgress(projectId, directoryId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '2' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}/languages/progress`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    getFileProgress(projectId, fileId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '2' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/languages/progress`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    getLanguageProgress(projectId, languageId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '2' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/languages/${languageId}/progress`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    getProjectProgress(projectId, options, deprecatedOffset, deprecatedLanguageIds) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset, languageIds: deprecatedLanguageIds };\n        }\n        let url = `${this.url}/projects/${projectId}/languages/progress`;\n        url = this.addQueryParam(url, 'languageIds', options.languageIds);\n        return this.getList(url, options.limit, options.offset);\n    }\n    listQaCheckIssues(projectId, options, deprecatedOffset, deprecatedCategory, deprecatedValidation, deprecatedLanguageIds) {\n        let url = `${this.url}/projects/${projectId}/qa-checks`;\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = {\n                limit: options,\n                offset: deprecatedOffset,\n                category: deprecatedCategory,\n                validation: deprecatedValidation,\n                languageIds: deprecatedLanguageIds,\n            };\n        }\n        url = this.addQueryParam(url, 'category', options.category);\n        url = this.addQueryParam(url, 'validation', options.validation);\n        url = this.addQueryParam(url, 'languageIds', options.languageIds);\n        return this.getList(url, options.limit, options.offset);\n    }\n}\nexports.TranslationStatus = TranslationStatus;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Translations = void 0;\nconst core_1 = require(\"../core\");\nclass Translations extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param preTranslationId pre translation identifier\n     * @see https://support.crowdin.com/api/v2/#tag/Translations/paths/~1projects~1{projectId}~1pre-translations~1{preTranslationId}/get\n     */\n    preTranslationStatus(projectId, preTranslationId) {\n        const url = `${this.url}/projects/${projectId}/pre-translations/${preTranslationId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.pre-translations.post\n     */\n    applyPreTranslation(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/pre-translations`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.builds.directories.post\n     */\n    buildProjectDirectoryTranslation(projectId, directoryId, request = {}) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/directories/${directoryId}`;\n        const config = this.defaultConfig();\n        return this.post(url, request, config);\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param request request body\n     * @param eTag 'If-None-Match' header\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.builds.files.post\n     */\n    buildProjectFileTranslation(projectId, fileId, request, eTag) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/files/${fileId}`;\n        const config = this.defaultConfig();\n        if (eTag) {\n            config.headers['If-None-Match'] = eTag;\n        }\n        return this.post(url, request, config);\n    }\n    listProjectBuilds(projectId, options, deprecatedLimit, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { branchId: options, limit: deprecatedLimit, offset: deprecatedOffset };\n        }\n        let url = `${this.url}/projects/${projectId}/translations/builds`;\n        url = this.addQueryParam(url, 'branchId', options.branchId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.builds.post\n     */\n    buildProject(projectId, request = {}) {\n        const url = `${this.url}/projects/${projectId}/translations/builds`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param languageId language identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.postOnLanguage\n     */\n    uploadTranslation(projectId, languageId, request) {\n        const url = `${this.url}/projects/${projectId}/translations/${languageId}`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.builds.download.download\n     */\n    downloadTranslations(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/${buildId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.builds.get\n     */\n    checkBuildStatus(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/${buildId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.builds.delete\n     */\n    cancelBuild(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/${buildId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.translations.exports.post\n     */\n    exportProjectTranslation(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/translations/exports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n}\nexports.Translations = Translations;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UploadStorage = void 0;\nconst core_1 = require(\"../core\");\nconst mimetypes = {\n    '3dml': 'text/vnd.in3d.3dml',\n    '3g2': 'video/3gpp2',\n    '3gp': 'video/3gpp',\n    '7z': 'application/x-7z-compressed',\n    aab: 'application/x-authorware-bin',\n    aac: 'audio/x-aac',\n    aam: 'application/x-authorware-map',\n    aas: 'application/x-authorware-seg',\n    abw: 'application/x-abiword',\n    ac: 'application/pkix-attr-cert',\n    acc: 'application/vnd.americandynamics.acc',\n    ace: 'application/x-ace-compressed',\n    acu: 'application/vnd.acucobol',\n    acutc: 'application/vnd.acucorp',\n    adp: 'audio/adpcm',\n    aep: 'application/vnd.audiograph',\n    afm: 'application/x-font-type1',\n    afp: 'application/vnd.ibm.modcap',\n    ahead: 'application/vnd.ahead.space',\n    ai: 'application/postscript',\n    aif: 'audio/x-aiff',\n    aifc: 'audio/x-aiff',\n    aiff: 'audio/x-aiff',\n    air: 'application/vnd.adobe.air-application-installer-package+zip',\n    ait: 'application/vnd.dvb.ait',\n    ami: 'application/vnd.amiga.ami',\n    apk: 'application/vnd.android.package-archive',\n    application: 'application/x-ms-application',\n    apr: 'application/vnd.lotus-approach',\n    asa: 'text/plain',\n    asax: 'application/octet-stream',\n    asc: 'application/pgp-signature',\n    ascx: 'text/plain',\n    asf: 'video/x-ms-asf',\n    ashx: 'text/plain',\n    asm: 'text/x-asm',\n    asmx: 'text/plain',\n    aso: 'application/vnd.accpac.simply.aso',\n    asp: 'text/plain',\n    aspx: 'text/plain',\n    asx: 'video/x-ms-asf',\n    atc: 'application/vnd.acucorp',\n    atom: 'application/atom+xml',\n    atomcat: 'application/atomcat+xml',\n    atomsvc: 'application/atomsvc+xml',\n    atx: 'application/vnd.antix.game-component',\n    au: 'audio/basic',\n    avi: 'video/x-msvideo',\n    aw: 'application/applixware',\n    axd: 'text/plain',\n    azf: 'application/vnd.airzip.filesecure.azf',\n    azs: 'application/vnd.airzip.filesecure.azs',\n    azw: 'application/vnd.amazon.ebook',\n    bat: 'application/x-msdownload',\n    bcpio: 'application/x-bcpio',\n    bdf: 'application/x-font-bdf',\n    bdm: 'application/vnd.syncml.dm+wbxml',\n    bed: 'application/vnd.realvnc.bed',\n    bh2: 'application/vnd.fujitsu.oasysprs',\n    bin: 'application/octet-stream',\n    bmi: 'application/vnd.bmi',\n    bmp: 'image/bmp',\n    book: 'application/vnd.framemaker',\n    box: 'application/vnd.previewsystems.box',\n    boz: 'application/x-bzip2',\n    bpk: 'application/octet-stream',\n    btif: 'image/prs.btif',\n    bz: 'application/x-bzip',\n    bz2: 'application/x-bzip2',\n    c: 'text/x-c',\n    c11amc: 'application/vnd.cluetrust.cartomobile-config',\n    c11amz: 'application/vnd.cluetrust.cartomobile-config-pkg',\n    c4d: 'application/vnd.clonk.c4group',\n    c4f: 'application/vnd.clonk.c4group',\n    c4g: 'application/vnd.clonk.c4group',\n    c4p: 'application/vnd.clonk.c4group',\n    c4u: 'application/vnd.clonk.c4group',\n    cab: 'application/vnd.ms-cab-compressed',\n    car: 'application/vnd.curl.car',\n    cat: 'application/vnd.ms-pki.seccat',\n    cc: 'text/x-c',\n    cct: 'application/x-director',\n    ccxml: 'application/ccxml+xml',\n    cdbcmsg: 'application/vnd.contact.cmsg',\n    cdf: 'application/x-netcdf',\n    cdkey: 'application/vnd.mediastation.cdkey',\n    cdmia: 'application/cdmi-capability',\n    cdmic: 'application/cdmi-container',\n    cdmid: 'application/cdmi-domain',\n    cdmio: 'application/cdmi-object',\n    cdmiq: 'application/cdmi-queue',\n    cdx: 'chemical/x-cdx',\n    cdxml: 'application/vnd.chemdraw+xml',\n    cdy: 'application/vnd.cinderella',\n    cer: 'application/pkix-cert',\n    cfc: 'application/x-coldfusion',\n    cfm: 'application/x-coldfusion',\n    cgm: 'image/cgm',\n    chat: 'application/x-chat',\n    chm: 'application/vnd.ms-htmlhelp',\n    chrt: 'application/vnd.kde.kchart',\n    cif: 'chemical/x-cif',\n    cii: 'application/vnd.anser-web-certificate-issue-initiation',\n    cil: 'application/vnd.ms-artgalry',\n    cla: 'application/vnd.claymore',\n    class: 'application/java-vm',\n    clkk: 'application/vnd.crick.clicker.keyboard',\n    clkp: 'application/vnd.crick.clicker.palette',\n    clkt: 'application/vnd.crick.clicker.template',\n    clkw: 'application/vnd.crick.clicker.wordbank',\n    clkx: 'application/vnd.crick.clicker',\n    clp: 'application/x-msclip',\n    cmc: 'application/vnd.cosmocaller',\n    cmdf: 'chemical/x-cmdf',\n    cml: 'chemical/x-cml',\n    cmp: 'application/vnd.yellowriver-custom-menu',\n    cmx: 'image/x-cmx',\n    cod: 'application/vnd.rim.cod',\n    com: 'application/x-msdownload',\n    conf: 'text/plain',\n    cpio: 'application/x-cpio',\n    cpp: 'text/x-c',\n    cpt: 'application/mac-compactpro',\n    crd: 'application/x-mscardfile',\n    crl: 'application/pkix-crl',\n    crt: 'application/x-x509-ca-cert',\n    cryptonote: 'application/vnd.rig.cryptonote',\n    cs: 'text/plain',\n    csh: 'application/x-csh',\n    csml: 'chemical/x-csml',\n    csp: 'application/vnd.commonspace',\n    css: 'text/css',\n    cst: 'application/x-director',\n    csv: 'text/csv',\n    cu: 'application/cu-seeme',\n    curl: 'text/vnd.curl',\n    cww: 'application/prs.cww',\n    cxt: 'application/x-director',\n    cxx: 'text/x-c',\n    dae: 'model/vnd.collada+xml',\n    daf: 'application/vnd.mobius.daf',\n    dataless: 'application/vnd.fdsn.seed',\n    davmount: 'application/davmount+xml',\n    dcr: 'application/x-director',\n    dcurl: 'text/vnd.curl.dcurl',\n    dd2: 'application/vnd.oma.dd2+xml',\n    ddd: 'application/vnd.fujixerox.ddd',\n    deb: 'application/x-debian-package',\n    def: 'text/plain',\n    deploy: 'application/octet-stream',\n    der: 'application/x-x509-ca-cert',\n    dfac: 'application/vnd.dreamfactory',\n    dic: 'text/x-c',\n    dir: 'application/x-director',\n    dis: 'application/vnd.mobius.dis',\n    dist: 'application/octet-stream',\n    distz: 'application/octet-stream',\n    djv: 'image/vnd.djvu',\n    djvu: 'image/vnd.djvu',\n    dll: 'application/x-msdownload',\n    dmg: 'application/octet-stream',\n    dms: 'application/octet-stream',\n    dna: 'application/vnd.dna',\n    doc: 'application/msword',\n    docm: 'application/vnd.ms-word.document.macroenabled.12',\n    docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    dot: 'application/msword',\n    dotm: 'application/vnd.ms-word.template.macroenabled.12',\n    dotx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    dp: 'application/vnd.osgi.dp',\n    dpg: 'application/vnd.dpgraph',\n    dra: 'audio/vnd.dra',\n    dsc: 'text/prs.lines.tag',\n    dssc: 'application/dssc+der',\n    dtb: 'application/x-dtbook+xml',\n    dtd: 'application/xml-dtd',\n    dts: 'audio/vnd.dts',\n    dtshd: 'audio/vnd.dts.hd',\n    dump: 'application/octet-stream',\n    dvi: 'application/x-dvi',\n    dwf: 'model/vnd.dwf',\n    dwg: 'image/vnd.dwg',\n    dxf: 'image/vnd.dxf',\n    dxp: 'application/vnd.spotfire.dxp',\n    dxr: 'application/x-director',\n    ecelp4800: 'audio/vnd.nuera.ecelp4800',\n    ecelp7470: 'audio/vnd.nuera.ecelp7470',\n    ecelp9600: 'audio/vnd.nuera.ecelp9600',\n    ecma: 'application/ecmascript',\n    edm: 'application/vnd.novadigm.edm',\n    edx: 'application/vnd.novadigm.edx',\n    efif: 'application/vnd.picsel',\n    ei6: 'application/vnd.pg.osasli',\n    elc: 'application/octet-stream',\n    eml: 'message/rfc822',\n    emma: 'application/emma+xml',\n    eol: 'audio/vnd.digital-winds',\n    eot: 'application/vnd.ms-fontobject',\n    eps: 'application/postscript',\n    epub: 'application/epub+zip',\n    es3: 'application/vnd.eszigno3+xml',\n    esf: 'application/vnd.epson.esf',\n    et3: 'application/vnd.eszigno3+xml',\n    etx: 'text/x-setext',\n    exe: 'application/x-msdownload',\n    exi: 'application/exi',\n    ext: 'application/vnd.novadigm.ext',\n    ez: 'application/andrew-inset',\n    ez2: 'application/vnd.ezpix-album',\n    ez3: 'application/vnd.ezpix-package',\n    f: 'text/x-fortran',\n    f4v: 'video/x-f4v',\n    f77: 'text/x-fortran',\n    f90: 'text/x-fortran',\n    fbs: 'image/vnd.fastbidsheet',\n    fcs: 'application/vnd.isac.fcs',\n    fdf: 'application/vnd.fdf',\n    /*eslint-disable-next-line @typescript-eslint/camelcase*/\n    fe_launch: 'application/vnd.denovo.fcselayout-link',\n    fg5: 'application/vnd.fujitsu.oasysgp',\n    fgd: 'application/x-director',\n    fh: 'image/x-freehand',\n    fh4: 'image/x-freehand',\n    fh5: 'image/x-freehand',\n    fh7: 'image/x-freehand',\n    fhc: 'image/x-freehand',\n    fig: 'application/x-xfig',\n    fli: 'video/x-fli',\n    flo: 'application/vnd.micrografx.flo',\n    flv: 'video/x-flv',\n    flw: 'application/vnd.kde.kivio',\n    flx: 'text/vnd.fmi.flexstor',\n    fly: 'text/vnd.fly',\n    fm: 'application/vnd.framemaker',\n    fnc: 'application/vnd.frogans.fnc',\n    for: 'text/x-fortran',\n    fpx: 'image/vnd.fpx',\n    frame: 'application/vnd.framemaker',\n    fsc: 'application/vnd.fsc.weblaunch',\n    fst: 'image/vnd.fst',\n    ftc: 'application/vnd.fluxtime.clip',\n    fti: 'application/vnd.anser-web-funds-transfer-initiation',\n    fvt: 'video/vnd.fvt',\n    fxp: 'application/vnd.adobe.fxp',\n    fxpl: 'application/vnd.adobe.fxp',\n    fzs: 'application/vnd.fuzzysheet',\n    g2w: 'application/vnd.geoplan',\n    g3: 'image/g3fax',\n    g3w: 'application/vnd.geospace',\n    gac: 'application/vnd.groove-account',\n    gdl: 'model/vnd.gdl',\n    geo: 'application/vnd.dynageo',\n    gex: 'application/vnd.geometry-explorer',\n    ggb: 'application/vnd.geogebra.file',\n    ggt: 'application/vnd.geogebra.tool',\n    ghf: 'application/vnd.groove-help',\n    gif: 'image/gif',\n    gim: 'application/vnd.groove-identity-message',\n    gmx: 'application/vnd.gmx',\n    gnumeric: 'application/x-gnumeric',\n    gph: 'application/vnd.flographit',\n    gqf: 'application/vnd.grafeq',\n    gqs: 'application/vnd.grafeq',\n    gram: 'application/srgs',\n    gre: 'application/vnd.geometry-explorer',\n    grv: 'application/vnd.groove-injector',\n    grxml: 'application/srgs+xml',\n    gsf: 'application/x-font-ghostscript',\n    gtar: 'application/x-gtar',\n    gtm: 'application/vnd.groove-tool-message',\n    gtw: 'model/vnd.gtw',\n    gv: 'text/vnd.graphviz',\n    gxt: 'application/vnd.geonext',\n    h: 'text/x-c',\n    h261: 'video/h261',\n    h263: 'video/h263',\n    h264: 'video/h264',\n    hal: 'application/vnd.hal+xml',\n    hbci: 'application/vnd.hbci',\n    hdf: 'application/x-hdf',\n    hh: 'text/x-c',\n    hlp: 'application/winhlp',\n    hpgl: 'application/vnd.hp-hpgl',\n    hpid: 'application/vnd.hp-hpid',\n    hps: 'application/vnd.hp-hps',\n    hqx: 'application/mac-binhex40',\n    hta: 'application/octet-stream',\n    htc: 'text/html',\n    htke: 'application/vnd.kenameaapp',\n    htm: 'text/html',\n    html: 'text/html',\n    hvd: 'application/vnd.yamaha.hv-dic',\n    hvp: 'application/vnd.yamaha.hv-voice',\n    hvs: 'application/vnd.yamaha.hv-script',\n    i2g: 'application/vnd.intergeo',\n    icc: 'application/vnd.iccprofile',\n    ice: 'x-conference/x-cooltalk',\n    icm: 'application/vnd.iccprofile',\n    ico: 'image/x-icon',\n    ics: 'text/calendar',\n    ief: 'image/ief',\n    ifb: 'text/calendar',\n    ifm: 'application/vnd.shana.informed.formdata',\n    iges: 'model/iges',\n    igl: 'application/vnd.igloader',\n    igm: 'application/vnd.insors.igm',\n    igs: 'model/iges',\n    igx: 'application/vnd.micrografx.igx',\n    iif: 'application/vnd.shana.informed.interchange',\n    imp: 'application/vnd.accpac.simply.imp',\n    ims: 'application/vnd.ms-ims',\n    in: 'text/plain',\n    ini: 'text/plain',\n    ipfix: 'application/ipfix',\n    ipk: 'application/vnd.shana.informed.package',\n    irm: 'application/vnd.ibm.rights-management',\n    irp: 'application/vnd.irepository.package+xml',\n    iso: 'application/octet-stream',\n    itp: 'application/vnd.shana.informed.formtemplate',\n    ivp: 'application/vnd.immervision-ivp',\n    ivu: 'application/vnd.immervision-ivu',\n    jad: 'text/vnd.sun.j2me.app-descriptor',\n    jam: 'application/vnd.jam',\n    jar: 'application/java-archive',\n    java: 'text/x-java-source',\n    jisp: 'application/vnd.jisp',\n    jlt: 'application/vnd.hp-jlyt',\n    jnlp: 'application/x-java-jnlp-file',\n    joda: 'application/vnd.joost.joda-archive',\n    jpe: 'image/jpeg',\n    jpeg: 'image/jpeg',\n    jpg: 'image/jpeg',\n    jpgm: 'video/jpm',\n    jpgv: 'video/jpeg',\n    jpm: 'video/jpm',\n    js: 'text/javascript',\n    json: 'application/json',\n    kar: 'audio/midi',\n    karbon: 'application/vnd.kde.karbon',\n    kfo: 'application/vnd.kde.kformula',\n    kia: 'application/vnd.kidspiration',\n    kml: 'application/vnd.google-earth.kml+xml',\n    kmz: 'application/vnd.google-earth.kmz',\n    kne: 'application/vnd.kinar',\n    knp: 'application/vnd.kinar',\n    kon: 'application/vnd.kde.kontour',\n    kpr: 'application/vnd.kde.kpresenter',\n    kpt: 'application/vnd.kde.kpresenter',\n    ksp: 'application/vnd.kde.kspread',\n    ktr: 'application/vnd.kahootz',\n    ktx: 'image/ktx',\n    ktz: 'application/vnd.kahootz',\n    kwd: 'application/vnd.kde.kword',\n    kwt: 'application/vnd.kde.kword',\n    lasxml: 'application/vnd.las.las+xml',\n    latex: 'application/x-latex',\n    lbd: 'application/vnd.llamagraphics.life-balance.desktop',\n    lbe: 'application/vnd.llamagraphics.life-balance.exchange+xml',\n    les: 'application/vnd.hhe.lesson-player',\n    lha: 'application/octet-stream',\n    link66: 'application/vnd.route66.link66+xml',\n    list: 'text/plain',\n    list3820: 'application/vnd.ibm.modcap',\n    listafp: 'application/vnd.ibm.modcap',\n    log: 'text/plain',\n    lostxml: 'application/lost+xml',\n    lrf: 'application/octet-stream',\n    lrm: 'application/vnd.ms-lrm',\n    ltf: 'application/vnd.frogans.ltf',\n    lvp: 'audio/vnd.lucent.voice',\n    lwp: 'application/vnd.lotus-wordpro',\n    lzh: 'application/octet-stream',\n    m13: 'application/x-msmediaview',\n    m14: 'application/x-msmediaview',\n    m1v: 'video/mpeg',\n    m21: 'application/mp21',\n    m2a: 'audio/mpeg',\n    m2v: 'video/mpeg',\n    m3a: 'audio/mpeg',\n    m3u: 'audio/x-mpegurl',\n    m3u8: 'application/vnd.apple.mpegurl',\n    m4a: 'audio/mp4',\n    m4u: 'video/vnd.mpegurl',\n    m4v: 'video/mp4',\n    ma: 'application/mathematica',\n    mads: 'application/mads+xml',\n    mag: 'application/vnd.ecowin.chart',\n    maker: 'application/vnd.framemaker',\n    man: 'text/troff',\n    mathml: 'application/mathml+xml',\n    mb: 'application/mathematica',\n    mbk: 'application/vnd.mobius.mbk',\n    mbox: 'application/mbox',\n    mc1: 'application/vnd.medcalcdata',\n    mcd: 'application/vnd.mcd',\n    mcurl: 'text/vnd.curl.mcurl',\n    mdb: 'application/x-msaccess',\n    mdi: 'image/vnd.ms-modi',\n    me: 'text/troff',\n    mesh: 'model/mesh',\n    meta4: 'application/metalink4+xml',\n    mets: 'application/mets+xml',\n    mfm: 'application/vnd.mfmp',\n    mgp: 'application/vnd.osgeo.mapguide.package',\n    mgz: 'application/vnd.proteus.magazine',\n    mid: 'audio/midi',\n    midi: 'audio/midi',\n    mif: 'application/vnd.mif',\n    mime: 'message/rfc822',\n    mj2: 'video/mj2',\n    mjp2: 'video/mj2',\n    mlp: 'application/vnd.dolby.mlp',\n    mmd: 'application/vnd.chipnuts.karaoke-mmd',\n    mmf: 'application/vnd.smaf',\n    mmr: 'image/vnd.fujixerox.edmics-mmr',\n    mny: 'application/x-msmoney',\n    mobi: 'application/x-mobipocket-ebook',\n    mods: 'application/mods+xml',\n    mov: 'video/quicktime',\n    movie: 'video/x-sgi-movie',\n    mp2: 'audio/mpeg',\n    mp21: 'application/mp21',\n    mp2a: 'audio/mpeg',\n    mp3: 'audio/mpeg',\n    mp4: 'video/mp4',\n    mp4a: 'audio/mp4',\n    mp4s: 'application/mp4',\n    mp4v: 'video/mp4',\n    mpc: 'application/vnd.mophun.certificate',\n    mpe: 'video/mpeg',\n    mpeg: 'video/mpeg',\n    mpg: 'video/mpeg',\n    mpg4: 'video/mp4',\n    mpga: 'audio/mpeg',\n    mpkg: 'application/vnd.apple.installer+xml',\n    mpm: 'application/vnd.blueice.multipass',\n    mpn: 'application/vnd.mophun.application',\n    mpp: 'application/vnd.ms-project',\n    mpt: 'application/vnd.ms-project',\n    mpy: 'application/vnd.ibm.minipay',\n    mqy: 'application/vnd.mobius.mqy',\n    mrc: 'application/marc',\n    mrcx: 'application/marcxml+xml',\n    ms: 'text/troff',\n    mscml: 'application/mediaservercontrol+xml',\n    mseed: 'application/vnd.fdsn.mseed',\n    mseq: 'application/vnd.mseq',\n    msf: 'application/vnd.epson.msf',\n    msh: 'model/mesh',\n    msi: 'application/x-msdownload',\n    msl: 'application/vnd.mobius.msl',\n    msty: 'application/vnd.muvee.style',\n    mts: 'model/vnd.mts',\n    mus: 'application/vnd.musician',\n    musicxml: 'application/vnd.recordare.musicxml+xml',\n    mvb: 'application/x-msmediaview',\n    mwf: 'application/vnd.mfer',\n    mxf: 'application/mxf',\n    mxl: 'application/vnd.recordare.musicxml',\n    mxml: 'application/xv+xml',\n    mxs: 'application/vnd.triscape.mxs',\n    mxu: 'video/vnd.mpegurl',\n    'n-gage': 'application/vnd.nokia.n-gage.symbian.install',\n    n3: 'text/n3',\n    nb: 'application/mathematica',\n    nbp: 'application/vnd.wolfram.player',\n    nc: 'application/x-netcdf',\n    ncx: 'application/x-dtbncx+xml',\n    ngdat: 'application/vnd.nokia.n-gage.data',\n    nlu: 'application/vnd.neurolanguage.nlu',\n    nml: 'application/vnd.enliven',\n    nnd: 'application/vnd.noblenet-directory',\n    nns: 'application/vnd.noblenet-sealer',\n    nnw: 'application/vnd.noblenet-web',\n    npx: 'image/vnd.net-fpx',\n    nsf: 'application/vnd.lotus-notes',\n    oa2: 'application/vnd.fujitsu.oasys2',\n    oa3: 'application/vnd.fujitsu.oasys3',\n    oas: 'application/vnd.fujitsu.oasys',\n    obd: 'application/x-msbinder',\n    oda: 'application/oda',\n    odb: 'application/vnd.oasis.opendocument.database',\n    odc: 'application/vnd.oasis.opendocument.chart',\n    odf: 'application/vnd.oasis.opendocument.formula',\n    odft: 'application/vnd.oasis.opendocument.formula-template',\n    odg: 'application/vnd.oasis.opendocument.graphics',\n    odi: 'application/vnd.oasis.opendocument.image',\n    odm: 'application/vnd.oasis.opendocument.text-master',\n    odp: 'application/vnd.oasis.opendocument.presentation',\n    ods: 'application/vnd.oasis.opendocument.spreadsheet',\n    odt: 'application/vnd.oasis.opendocument.text',\n    oga: 'audio/ogg',\n    ogg: 'audio/ogg',\n    ogv: 'video/ogg',\n    ogx: 'application/ogg',\n    onepkg: 'application/onenote',\n    onetmp: 'application/onenote',\n    onetoc: 'application/onenote',\n    onetoc2: 'application/onenote',\n    opf: 'application/oebps-package+xml',\n    oprc: 'application/vnd.palm',\n    org: 'application/vnd.lotus-organizer',\n    osf: 'application/vnd.yamaha.openscoreformat',\n    osfpvg: 'application/vnd.yamaha.openscoreformat.osfpvg+xml',\n    otc: 'application/vnd.oasis.opendocument.chart-template',\n    otf: 'application/x-font-otf',\n    otg: 'application/vnd.oasis.opendocument.graphics-template',\n    oth: 'application/vnd.oasis.opendocument.text-web',\n    oti: 'application/vnd.oasis.opendocument.image-template',\n    otp: 'application/vnd.oasis.opendocument.presentation-template',\n    ots: 'application/vnd.oasis.opendocument.spreadsheet-template',\n    ott: 'application/vnd.oasis.opendocument.text-template',\n    oxt: 'application/vnd.openofficeorg.extension',\n    p: 'text/x-pascal',\n    p10: 'application/pkcs10',\n    p12: 'application/x-pkcs12',\n    p7b: 'application/x-pkcs7-certificates',\n    p7c: 'application/pkcs7-mime',\n    p7m: 'application/pkcs7-mime',\n    p7r: 'application/x-pkcs7-certreqresp',\n    p7s: 'application/pkcs7-signature',\n    p8: 'application/pkcs8',\n    pas: 'text/x-pascal',\n    paw: 'application/vnd.pawaafile',\n    pbd: 'application/vnd.powerbuilder6',\n    pbm: 'image/x-portable-bitmap',\n    pcf: 'application/x-font-pcf',\n    pcl: 'application/vnd.hp-pcl',\n    pclxl: 'application/vnd.hp-pclxl',\n    pct: 'image/x-pict',\n    pcurl: 'application/vnd.curl.pcurl',\n    pcx: 'image/x-pcx',\n    pdb: 'application/vnd.palm',\n    pdf: 'application/pdf',\n    pfa: 'application/x-font-type1',\n    pfb: 'application/x-font-type1',\n    pfm: 'application/x-font-type1',\n    pfr: 'application/font-tdpfr',\n    pfx: 'application/x-pkcs12',\n    pgm: 'image/x-portable-graymap',\n    pgn: 'application/x-chess-pgn',\n    pgp: 'application/pgp-encrypted',\n    php: 'text/x-php',\n    phps: 'application/x-httpd-phps',\n    pic: 'image/x-pict',\n    pkg: 'application/octet-stream',\n    pki: 'application/pkixcmp',\n    pkipath: 'application/pkix-pkipath',\n    plb: 'application/vnd.3gpp.pic-bw-large',\n    plc: 'application/vnd.mobius.plc',\n    plf: 'application/vnd.pocketlearn',\n    pls: 'application/pls+xml',\n    pml: 'application/vnd.ctc-posml',\n    png: 'image/png',\n    pnm: 'image/x-portable-anymap',\n    portpkg: 'application/vnd.macports.portpkg',\n    pot: 'application/vnd.ms-powerpoint',\n    potm: 'application/vnd.ms-powerpoint.template.macroenabled.12',\n    potx: 'application/vnd.openxmlformats-officedocument.presentationml.template',\n    ppam: 'application/vnd.ms-powerpoint.addin.macroenabled.12',\n    ppd: 'application/vnd.cups-ppd',\n    ppm: 'image/x-portable-pixmap',\n    pps: 'application/vnd.ms-powerpoint',\n    ppsm: 'application/vnd.ms-powerpoint.slideshow.macroenabled.12',\n    ppsx: 'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    ppt: 'application/vnd.ms-powerpoint',\n    pptm: 'application/vnd.ms-powerpoint.presentation.macroenabled.12',\n    pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    pqa: 'application/vnd.palm',\n    prc: 'application/x-mobipocket-ebook',\n    pre: 'application/vnd.lotus-freelance',\n    prf: 'application/pics-rules',\n    ps: 'application/postscript',\n    psb: 'application/vnd.3gpp.pic-bw-small',\n    psd: 'image/vnd.adobe.photoshop',\n    psf: 'application/x-font-linux-psf',\n    pskcxml: 'application/pskc+xml',\n    ptid: 'application/vnd.pvi.ptid1',\n    pub: 'application/x-mspublisher',\n    pvb: 'application/vnd.3gpp.pic-bw-var',\n    pwn: 'application/vnd.3m.post-it-notes',\n    pya: 'audio/vnd.ms-playready.media.pya',\n    pyv: 'video/vnd.ms-playready.media.pyv',\n    qam: 'application/vnd.epson.quickanime',\n    qbo: 'application/vnd.intu.qbo',\n    qfx: 'application/vnd.intu.qfx',\n    qps: 'application/vnd.publishare-delta-tree',\n    qt: 'video/quicktime',\n    qwd: 'application/vnd.quark.quarkxpress',\n    qwt: 'application/vnd.quark.quarkxpress',\n    qxb: 'application/vnd.quark.quarkxpress',\n    qxd: 'application/vnd.quark.quarkxpress',\n    qxl: 'application/vnd.quark.quarkxpress',\n    qxt: 'application/vnd.quark.quarkxpress',\n    ra: 'audio/x-pn-realaudio',\n    ram: 'audio/x-pn-realaudio',\n    rar: 'application/x-rar-compressed',\n    ras: 'image/x-cmu-raster',\n    rb: 'text/plain',\n    rcprofile: 'application/vnd.ipunplugged.rcprofile',\n    rdf: 'application/rdf+xml',\n    rdz: 'application/vnd.data-vision.rdz',\n    rep: 'application/vnd.businessobjects',\n    res: 'application/x-dtbresource+xml',\n    resx: 'text/xml',\n    rgb: 'image/x-rgb',\n    rif: 'application/reginfo+xml',\n    rip: 'audio/vnd.rip',\n    rl: 'application/resource-lists+xml',\n    rlc: 'image/vnd.fujixerox.edmics-rlc',\n    rld: 'application/resource-lists-diff+xml',\n    rm: 'application/vnd.rn-realmedia',\n    rmi: 'audio/midi',\n    rmp: 'audio/x-pn-realaudio-plugin',\n    rms: 'application/vnd.jcp.javame.midlet-rms',\n    rnc: 'application/relax-ng-compact-syntax',\n    roff: 'text/troff',\n    rp9: 'application/vnd.cloanto.rp9',\n    rpss: 'application/vnd.nokia.radio-presets',\n    rpst: 'application/vnd.nokia.radio-preset',\n    rq: 'application/sparql-query',\n    rs: 'application/rls-services+xml',\n    rsd: 'application/rsd+xml',\n    rss: 'application/rss+xml',\n    rtf: 'application/rtf',\n    rtx: 'text/richtext',\n    s: 'text/x-asm',\n    saf: 'application/vnd.yamaha.smaf-audio',\n    sbml: 'application/sbml+xml',\n    sc: 'application/vnd.ibm.secure-container',\n    scd: 'application/x-msschedule',\n    scm: 'application/vnd.lotus-screencam',\n    scq: 'application/scvp-cv-request',\n    scs: 'application/scvp-cv-response',\n    scurl: 'text/vnd.curl.scurl',\n    sda: 'application/vnd.stardivision.draw',\n    sdc: 'application/vnd.stardivision.calc',\n    sdd: 'application/vnd.stardivision.impress',\n    sdkd: 'application/vnd.solent.sdkm+xml',\n    sdkm: 'application/vnd.solent.sdkm+xml',\n    sdp: 'application/sdp',\n    sdw: 'application/vnd.stardivision.writer',\n    see: 'application/vnd.seemail',\n    seed: 'application/vnd.fdsn.seed',\n    sema: 'application/vnd.sema',\n    semd: 'application/vnd.semd',\n    semf: 'application/vnd.semf',\n    ser: 'application/java-serialized-object',\n    setpay: 'application/set-payment-initiation',\n    setreg: 'application/set-registration-initiation',\n    'sfd-hdstx': 'application/vnd.hydrostatix.sof-data',\n    sfs: 'application/vnd.spotfire.sfs',\n    sgl: 'application/vnd.stardivision.writer-global',\n    sgm: 'text/sgml',\n    sgml: 'text/sgml',\n    sh: 'application/x-sh',\n    shar: 'application/x-shar',\n    shf: 'application/shf+xml',\n    sig: 'application/pgp-signature',\n    silo: 'model/mesh',\n    sis: 'application/vnd.symbian.install',\n    sisx: 'application/vnd.symbian.install',\n    sit: 'application/x-stuffit',\n    sitx: 'application/x-stuffitx',\n    skd: 'application/vnd.koan',\n    skm: 'application/vnd.koan',\n    skp: 'application/vnd.koan',\n    skt: 'application/vnd.koan',\n    sldm: 'application/vnd.ms-powerpoint.slide.macroenabled.12',\n    sldx: 'application/vnd.openxmlformats-officedocument.presentationml.slide',\n    slt: 'application/vnd.epson.salt',\n    sm: 'application/vnd.stepmania.stepchart',\n    smf: 'application/vnd.stardivision.math',\n    smi: 'application/smil+xml',\n    smil: 'application/smil+xml',\n    snd: 'audio/basic',\n    snf: 'application/x-font-snf',\n    so: 'application/octet-stream',\n    spc: 'application/x-pkcs7-certificates',\n    spf: 'application/vnd.yamaha.smaf-phrase',\n    spl: 'application/x-futuresplash',\n    spot: 'text/vnd.in3d.spot',\n    spp: 'application/scvp-vp-response',\n    spq: 'application/scvp-vp-request',\n    spx: 'audio/ogg',\n    src: 'application/x-wais-source',\n    srt: 'application/octet-stream',\n    sru: 'application/sru+xml',\n    srx: 'application/sparql-results+xml',\n    sse: 'application/vnd.kodak-descriptor',\n    ssf: 'application/vnd.epson.ssf',\n    ssml: 'application/ssml+xml',\n    st: 'application/vnd.sailingtracker.track',\n    stc: 'application/vnd.sun.xml.calc.template',\n    std: 'application/vnd.sun.xml.draw.template',\n    stf: 'application/vnd.wt.stf',\n    sti: 'application/vnd.sun.xml.impress.template',\n    stk: 'application/hyperstudio',\n    stl: 'application/vnd.ms-pki.stl',\n    str: 'application/vnd.pg.format',\n    stw: 'application/vnd.sun.xml.writer.template',\n    sub: 'image/vnd.dvb.subtitle',\n    sus: 'application/vnd.sus-calendar',\n    susp: 'application/vnd.sus-calendar',\n    sv4cpio: 'application/x-sv4cpio',\n    sv4crc: 'application/x-sv4crc',\n    svc: 'application/vnd.dvb.service',\n    svd: 'application/vnd.svd',\n    svg: 'image/svg+xml',\n    svgz: 'image/svg+xml',\n    swa: 'application/x-director',\n    swf: 'application/x-shockwave-flash',\n    swi: 'application/vnd.aristanetworks.swi',\n    sxc: 'application/vnd.sun.xml.calc',\n    sxd: 'application/vnd.sun.xml.draw',\n    sxg: 'application/vnd.sun.xml.writer.global',\n    sxi: 'application/vnd.sun.xml.impress',\n    sxm: 'application/vnd.sun.xml.math',\n    sxw: 'application/vnd.sun.xml.writer',\n    t: 'text/troff',\n    tao: 'application/vnd.tao.intent-module-archive',\n    tar: 'application/x-tar',\n    tcap: 'application/vnd.3gpp2.tcap',\n    tcl: 'application/x-tcl',\n    teacher: 'application/vnd.smart.teacher',\n    tei: 'application/tei+xml',\n    teicorpus: 'application/tei+xml',\n    tex: 'application/x-tex',\n    texi: 'application/x-texinfo',\n    texinfo: 'application/x-texinfo',\n    text: 'text/plain',\n    tfi: 'application/thraud+xml',\n    tfm: 'application/x-tex-tfm',\n    thmx: 'application/vnd.ms-officetheme',\n    tif: 'image/tiff',\n    tiff: 'image/tiff',\n    tmo: 'application/vnd.tmobile-livetv',\n    torrent: 'application/x-bittorrent',\n    tpl: 'application/vnd.groove-tool-template',\n    tpt: 'application/vnd.trid.tpt',\n    tr: 'text/troff',\n    tra: 'application/vnd.trueapp',\n    trm: 'application/x-msterminal',\n    tsd: 'application/timestamped-data',\n    tsv: 'text/tab-separated-values',\n    ttc: 'application/x-font-ttf',\n    ttf: 'application/x-font-ttf',\n    ttl: 'text/turtle',\n    twd: 'application/vnd.simtech-mindmapper',\n    twds: 'application/vnd.simtech-mindmapper',\n    txd: 'application/vnd.genomatix.tuxedo',\n    txf: 'application/vnd.mobius.txf',\n    txt: 'text/plain',\n    u32: 'application/x-authorware-bin',\n    udeb: 'application/x-debian-package',\n    ufd: 'application/vnd.ufdl',\n    ufdl: 'application/vnd.ufdl',\n    umj: 'application/vnd.umajin',\n    unityweb: 'application/vnd.unity',\n    uoml: 'application/vnd.uoml+xml',\n    uri: 'text/uri-list',\n    uris: 'text/uri-list',\n    urls: 'text/uri-list',\n    ustar: 'application/x-ustar',\n    utz: 'application/vnd.uiq.theme',\n    uu: 'text/x-uuencode',\n    uva: 'audio/vnd.dece.audio',\n    uvd: 'application/vnd.dece.data',\n    uvf: 'application/vnd.dece.data',\n    uvg: 'image/vnd.dece.graphic',\n    uvh: 'video/vnd.dece.hd',\n    uvi: 'image/vnd.dece.graphic',\n    uvm: 'video/vnd.dece.mobile',\n    uvp: 'video/vnd.dece.pd',\n    uvs: 'video/vnd.dece.sd',\n    uvt: 'application/vnd.dece.ttml+xml',\n    uvu: 'video/vnd.uvvu.mp4',\n    uvv: 'video/vnd.dece.video',\n    uvva: 'audio/vnd.dece.audio',\n    uvvd: 'application/vnd.dece.data',\n    uvvf: 'application/vnd.dece.data',\n    uvvg: 'image/vnd.dece.graphic',\n    uvvh: 'video/vnd.dece.hd',\n    uvvi: 'image/vnd.dece.graphic',\n    uvvm: 'video/vnd.dece.mobile',\n    uvvp: 'video/vnd.dece.pd',\n    uvvs: 'video/vnd.dece.sd',\n    uvvt: 'application/vnd.dece.ttml+xml',\n    uvvu: 'video/vnd.uvvu.mp4',\n    uvvv: 'video/vnd.dece.video',\n    uvvx: 'application/vnd.dece.unspecified',\n    uvx: 'application/vnd.dece.unspecified',\n    vcd: 'application/x-cdlink',\n    vcf: 'text/x-vcard',\n    vcg: 'application/vnd.groove-vcard',\n    vcs: 'text/x-vcalendar',\n    vcx: 'application/vnd.vcx',\n    vis: 'application/vnd.visionary',\n    viv: 'video/vnd.vivo',\n    vor: 'application/vnd.stardivision.writer',\n    vox: 'application/x-authorware-bin',\n    vrml: 'model/vrml',\n    vsd: 'application/vnd.visio',\n    vsf: 'application/vnd.vsf',\n    vss: 'application/vnd.visio',\n    vst: 'application/vnd.visio',\n    vsw: 'application/vnd.visio',\n    vtu: 'model/vnd.vtu',\n    vxml: 'application/voicexml+xml',\n    w3d: 'application/x-director',\n    wad: 'application/x-doom',\n    wav: 'audio/x-wav',\n    wax: 'audio/x-ms-wax',\n    wbmp: 'image/vnd.wap.wbmp',\n    wbs: 'application/vnd.criticaltools.wbs+xml',\n    wbxml: 'application/vnd.wap.wbxml',\n    wcm: 'application/vnd.ms-works',\n    wdb: 'application/vnd.ms-works',\n    weba: 'audio/webm',\n    webm: 'video/webm',\n    webp: 'image/webp',\n    wg: 'application/vnd.pmi.widget',\n    wgt: 'application/widget',\n    wks: 'application/vnd.ms-works',\n    wm: 'video/x-ms-wm',\n    wma: 'audio/x-ms-wma',\n    wmd: 'application/x-ms-wmd',\n    wmf: 'application/x-msmetafile',\n    wml: 'text/vnd.wap.wml',\n    wmlc: 'application/vnd.wap.wmlc',\n    wmls: 'text/vnd.wap.wmlscript',\n    wmlsc: 'application/vnd.wap.wmlscriptc',\n    wmv: 'video/x-ms-wmv',\n    wmx: 'video/x-ms-wmx',\n    wmz: 'application/x-ms-wmz',\n    woff: 'application/x-font-woff',\n    wpd: 'application/vnd.wordperfect',\n    wpl: 'application/vnd.ms-wpl',\n    wps: 'application/vnd.ms-works',\n    wqd: 'application/vnd.wqd',\n    wri: 'application/x-mswrite',\n    wrl: 'model/vrml',\n    wsdl: 'application/wsdl+xml',\n    wspolicy: 'application/wspolicy+xml',\n    wtb: 'application/vnd.webturbo',\n    wvx: 'video/x-ms-wvx',\n    x32: 'application/x-authorware-bin',\n    x3d: 'application/vnd.hzn-3d-crossword',\n    xap: 'application/x-silverlight-app',\n    xar: 'application/vnd.xara',\n    xbap: 'application/x-ms-xbap',\n    xbd: 'application/vnd.fujixerox.docuworks.binder',\n    xbm: 'image/x-xbitmap',\n    xdf: 'application/xcap-diff+xml',\n    xdm: 'application/vnd.syncml.dm+xml',\n    xdp: 'application/vnd.adobe.xdp+xml',\n    xdssc: 'application/dssc+xml',\n    xdw: 'application/vnd.fujixerox.docuworks',\n    xenc: 'application/xenc+xml',\n    xer: 'application/patch-ops-error+xml',\n    xfdf: 'application/vnd.adobe.xfdf',\n    xfdl: 'application/vnd.xfdl',\n    xht: 'application/xhtml+xml',\n    xhtml: 'application/xhtml+xml',\n    xhvml: 'application/xv+xml',\n    xif: 'image/vnd.xiff',\n    xla: 'application/vnd.ms-excel',\n    xlam: 'application/vnd.ms-excel.addin.macroenabled.12',\n    xlc: 'application/vnd.ms-excel',\n    xlm: 'application/vnd.ms-excel',\n    xls: 'application/vnd.ms-excel',\n    xlsb: 'application/vnd.ms-excel.sheet.binary.macroenabled.12',\n    xlsm: 'application/vnd.ms-excel.sheet.macroenabled.12',\n    xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    xlt: 'application/vnd.ms-excel',\n    xltm: 'application/vnd.ms-excel.template.macroenabled.12',\n    xltx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    xlw: 'application/vnd.ms-excel',\n    xml: 'application/xml',\n    xo: 'application/vnd.olpc-sugar',\n    xop: 'application/xop+xml',\n    xpi: 'application/x-xpinstall',\n    xpm: 'image/x-xpixmap',\n    xpr: 'application/vnd.is-xpr',\n    xps: 'application/vnd.ms-xpsdocument',\n    xpw: 'application/vnd.intercon.formnet',\n    xpx: 'application/vnd.intercon.formnet',\n    xsl: 'application/xml',\n    xslt: 'application/xslt+xml',\n    xsm: 'application/vnd.syncml+xml',\n    xspf: 'application/xspf+xml',\n    xul: 'application/vnd.mozilla.xul+xml',\n    xvm: 'application/xv+xml',\n    xvml: 'application/xv+xml',\n    xwd: 'image/x-xwindowdump',\n    xyz: 'chemical/x-xyz',\n    yaml: 'text/yaml',\n    yang: 'application/yang',\n    yin: 'application/yin+xml',\n    yml: 'text/yaml',\n    zaz: 'application/vnd.zzazz.deck+xml',\n    zip: 'application/zip',\n    zir: 'application/vnd.zul',\n    zirz: 'application/vnd.zul',\n    zmm: 'application/vnd.handheld-entertainment+xml',\n    tmx: 'application/x-tmx',\n    tbx: 'application/x-tbx',\n};\nclass UploadStorage extends core_1.CrowdinApi {\n    listStorages(options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/storages`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param fileName file name\n     * @param request binary file data\n     * @param contentType content type header\n     * @see https://support.crowdin.com/api/v2/#operation/api.storages.post\n     */\n    addStorage(fileName, request, contentType) {\n        const url = `${this.url}/storages`;\n        const config = this.defaultConfig();\n        config.headers['Crowdin-API-FileName'] = fileName;\n        if (contentType) {\n            config.headers['Content-Type'] = contentType;\n        }\n        else {\n            const fileNameParts = fileName.split('.');\n            let contentType;\n            if (fileNameParts.length > 1) {\n                const fileExtrension = fileNameParts[fileNameParts.length - 1];\n                contentType = mimetypes[fileExtrension];\n            }\n            config.headers['Content-Type'] = contentType !== null && contentType !== void 0 ? contentType : 'application/octet-stream';\n        }\n        return this.post(url, request, config);\n    }\n    /**\n     * @param storageId storage identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.storages.get\n     */\n    getStorage(storageId) {\n        const url = `${this.url}/storages/${storageId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param storageId storage identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.storages.delete\n     */\n    deleteStorage(storageId) {\n        const url = `${this.url}/storages/${storageId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n}\nexports.UploadStorage = UploadStorage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Users = void 0;\nconst core_1 = require(\"../core\");\nclass Users extends core_1.CrowdinApi {\n    listProjectMembers(projectId, options, deprecatedRole, deprecatedLanguageId, deprecatedLimit, deprecatedOffset) {\n        let url = `${this.url}/projects/${projectId}/members`;\n        if ((0, core_1.isOptionalString)(options, '1' in arguments)) {\n            options = {\n                search: options,\n                role: deprecatedRole,\n                languageId: deprecatedLanguageId,\n                limit: deprecatedLimit,\n                offset: deprecatedOffset,\n            };\n        }\n        url = this.addQueryParam(url, 'search', options.search);\n        url = this.addQueryParam(url, 'role', options.role);\n        url = this.addQueryParam(url, 'languageId', options.languageId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.projects.members.post\n     */\n    addProjectMember(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/members`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param memberId member identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.members.get\n     */\n    getProjectMemberPermissions(projectId, memberId) {\n        const url = `${this.url}/projects/${projectId}/members/${memberId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param memberId member identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.projects.members.put\n     */\n    replaceProjectMemberPermissions(projectId, memberId, request = {}) {\n        const url = `${this.url}/projects/${projectId}/members/${memberId}`;\n        return this.put(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param memberId member identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.projects.members.delete\n     */\n    deleteMemberFromProject(projectId, memberId) {\n        const url = `${this.url}/projects/${projectId}/members/${memberId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    listUsers(options, deprecatedSearch, deprecatedTwoFactor, deprecatedLimit, deprecatedOffset) {\n        let url = `${this.url}/users`;\n        if ((0, core_1.isOptionalString)(options, '0' in arguments)) {\n            options = {\n                status: options,\n                search: deprecatedSearch,\n                twoFactor: deprecatedTwoFactor,\n                limit: deprecatedLimit,\n                offset: deprecatedOffset,\n            };\n        }\n        url = this.addQueryParam(url, 'status', options.status);\n        url = this.addQueryParam(url, 'search', options.search);\n        url = this.addQueryParam(url, 'twoFactor', options.twoFactor);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.users.post\n     */\n    inviteUser(request) {\n        const url = `${this.url}/users`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param userId user identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.users.getById\n     */\n    getUserInfo(userId) {\n        const url = `${this.url}/users/${userId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param userId user identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.users.delete\n     */\n    deleteUser(userId) {\n        const url = `${this.url}/users/${userId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param userId user identifier\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.users.patch\n     */\n    editUser(userId, request) {\n        const url = `${this.url}/users/${userId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @see https://support.crowdin.com/api/v2/#operation/api.user.get\n     */\n    getAuthenticatedUser() {\n        const url = `${this.url}/user`;\n        return this.get(url, this.defaultConfig());\n    }\n}\nexports.Users = Users;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vendors = void 0;\nconst core_1 = require(\"../core\");\nclass Vendors extends core_1.CrowdinApi {\n    listVendors(options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/vendors`;\n        return this.getList(url, options.limit, options.offset);\n    }\n}\nexports.Vendors = Vendors;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Webhooks = void 0;\nconst core_1 = require(\"../core\");\nclass Webhooks extends core_1.CrowdinApi {\n    listWebhooks(projectId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/webhooks`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.webhooks.post\n     */\n    addWebhook(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/webhooks`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param webhookId webhook identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.webhooks.get\n     */\n    getWebhook(projectId, webhookId) {\n        const url = `${this.url}/projects/${projectId}/webhooks/${webhookId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param webhookId webhook identifier\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.webhooks.delete\n     */\n    deleteWebhook(projectId, webhookId) {\n        const url = `${this.url}/projects/${projectId}/webhooks/${webhookId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param webhookId webhook identifier\n     * @param request request body\n     * @see https://support.crowdin.com/api/v2/#operation/api.projects.webhooks.patch\n     */\n    editWebhook(projectId, webhookId, request) {\n        const url = `${this.url}/projects/${projectId}/webhooks/${webhookId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Webhooks = Webhooks;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Workflows = void 0;\nconst core_1 = require(\"../core\");\nclass Workflows extends core_1.CrowdinApi {\n    listWorkflowSteps(projectId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/workflow-steps`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param stepId workflow step identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.projects.workflow-steps.getMany\n     */\n    getWorkflowStep(projectId, stepId) {\n        const url = `${this.url}/projects/${projectId}/workflow-steps/${stepId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    listWorkflowTemplates(options, deprecatedLimit, deprecatedOffset) {\n        let url = `${this.url}/workflow-templates`;\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = { groupId: options, limit: deprecatedLimit, offset: deprecatedOffset };\n        }\n        url = this.addQueryParam(url, 'groupId', options.groupId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param templateId workflow template identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.workflow-templates.get\n     */\n    getWorkflowTemplateInfo(templateId) {\n        const url = `${this.url}/workflow-templates/${templateId}`;\n        return this.get(url, this.defaultConfig());\n    }\n}\nexports.Workflows = Workflows;\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildFullPath = require('../core/buildFullPath');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\n\nvar isHttps = /https:?/;\n\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location;\n\n  // Basic proxy authorization\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  }\n\n  // If a proxy is used, any redirects must also pass through the proxy\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var resolve = function resolve(value) {\n      resolvePromise(value);\n    };\n    var reject = function reject(value) {\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    if ('User-Agent' in headers || 'user-agent' in headers) {\n      // User-Agent is specified; handle case where no UA header is desired\n      if (!headers['User-Agent'] && !headers['user-agent']) {\n        delete headers['User-Agent'];\n        delete headers['user-agent'];\n      }\n      // Otherwise, use specified value\n    } else {\n      // Only set header if it hasn't been set in config\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' &&\n                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n\n            return parsed.hostname === proxyElement;\n          });\n        }\n\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n\n      // if no content, is HEAD request or decompress disabled we should not decompress\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'compress':\n        case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n          stream = stream.pipe(zlib.createUnzip());\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        }\n      }\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        var totalResponseBytes = 0;\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            stream.destroy();\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString(config.responseEncoding);\n            if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n              responseData = utils.stripBOM(responseData);\n            }\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      var timeout = parseInt(config.timeout, 10);\n\n      if (isNaN(timeout)) {\n        reject(createError(\n          'error trying to parse `config.timeout` to int',\n          config,\n          'ERR_PARSE_TIMEOUT',\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        req.abort();\n        reject(createError(\n          'timeout of ' + timeout + 'ms exceeded',\n          config,\n          config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n          req\n        ));\n      });\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(enhanceError(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar pkg = require('./../../package.json');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\nvar currentVerArr = pkg.version.split('.');\n\n/**\n * Compare package versions\n * @param {string} version\n * @param {string?} thanVersion\n * @returns {boolean}\n */\nfunction isOlderVersion(version, thanVersion) {\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\n  var destVer = version.split('.');\n  for (var i = 0; i < 3; i++) {\n    if (pkgVersionArr[i] > destVer[i]) {\n      return true;\n    } else if (pkgVersionArr[i] < destVer[i]) {\n      return false;\n    }\n  }\n  return false;\n}\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator\n * @param {string?} version\n * @param {string} message\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  var isDeprecated = version && isOlderVersion(version);\n\n  function formatMessage(opt, desc) {\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\n    }\n\n    if (isDeprecated && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  isOlderVersion: isOlderVersion,\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","var debug;\n\nmodule.exports = function () {\n  if (!debug) {\n    try {\n      /* eslint global-require: off */\n      debug = require(\"debug\")(\"follow-redirects\");\n    }\n    catch (error) { /* */ }\n    if (typeof debug !== \"function\") {\n      debug = function () { /* */ };\n    }\n  }\n  debug.apply(null, arguments);\n};\n","var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"Redirected request failed\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\"\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  abortRequest(this._currentRequest);\n  this.emit(\"abort\");\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (typeof data === \"function\") {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    // Clear the timeout\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n\n    // Clean up all attached listeners\n    self.removeListener(\"abort\", clearTimer);\n    self.removeListener(\"error\", clearTimer);\n    self.removeListener(\"response\", clearTimer);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.on(\"abort\", clearTimer);\n  this.on(\"error\", clearTimer);\n  this.on(\"response\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new TypeError(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.slice(0, -1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var e = 0; e < events.length; e++) {\n    request.on(events[e], eventHandlers[events[e]]);\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n\n  // If the response is not a redirect; return it as-is\n  var location = response.headers.location;\n  if (!location || this._options.followRedirects === false ||\n      statusCode < 300 || statusCode >= 400) {\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n    return;\n  }\n\n  // The response is a redirect, so abort the current request\n  abortRequest(this._currentRequest);\n  // Discard the remainder of the response to avoid waiting for data\n  response.destroy();\n\n  // RFC7231§6.4: A client SHOULD detect and intervene\n  // in cyclical redirections (i.e., \"infinite\" redirection loops).\n  if (++this._redirectCount > this._options.maxRedirects) {\n    this.emit(\"error\", new TooManyRedirectsError());\n    return;\n  }\n\n  // Store the request headers if applicable\n  var requestHeaders;\n  var beforeRedirect = this._options.beforeRedirect;\n  if (beforeRedirect) {\n    requestHeaders = Object.assign({\n      // The Host header was set by nativeProtocol.request\n      Host: response.req.getHeader(\"host\"),\n    }, this._options.headers);\n  }\n\n  // RFC7231§6.4: Automatic redirection needs to done with\n  // care for methods not known to be safe, […]\n  // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n  // the request method from POST to GET for the subsequent request.\n  var method = this._options.method;\n  if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n      // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n      // the server is redirecting the user agent to a different resource […]\n      // A user agent can perform a retrieval request targeting that URI\n      // (a GET or HEAD request if using HTTP) […]\n      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n    this._options.method = \"GET\";\n    // Drop a possible entity and headers related to it\n    this._requestBodyBuffers = [];\n    removeMatchingHeaders(/^content-/i, this._options.headers);\n  }\n\n  // Drop the Host header, as the redirect might lead to a different host\n  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n  // If the redirect is relative, carry over the host of the last request\n  var currentUrlParts = url.parse(this._currentUrl);\n  var currentHost = currentHostHeader || currentUrlParts.host;\n  var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n    url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n  // Determine the URL of the redirection\n  var redirectUrl;\n  try {\n    redirectUrl = url.resolve(currentUrl, location);\n  }\n  catch (cause) {\n    this.emit(\"error\", new RedirectionError(cause));\n    return;\n  }\n\n  // Create the redirected request\n  debug(\"redirecting to\", redirectUrl);\n  this._isRedirect = true;\n  var redirectUrlParts = url.parse(redirectUrl);\n  Object.assign(this._options, redirectUrlParts);\n\n  // Drop confidential headers when redirecting to a less secure protocol\n  // or to a different domain that is not a superdomain\n  if (redirectUrlParts.protocol !== currentUrlParts.protocol &&\n     redirectUrlParts.protocol !== \"https:\" ||\n     redirectUrlParts.host !== currentHost &&\n     !isSubdomain(redirectUrlParts.host, currentHost)) {\n    removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);\n  }\n\n  // Evaluate the beforeRedirect callback\n  if (typeof beforeRedirect === \"function\") {\n    var responseDetails = {\n      headers: response.headers,\n      statusCode: statusCode,\n    };\n    var requestDetails = {\n      url: currentUrl,\n      method: method,\n      headers: requestHeaders,\n    };\n    try {\n      beforeRedirect(this._options, responseDetails, requestDetails);\n    }\n    catch (err) {\n      this.emit(\"error\", err);\n      return;\n    }\n    this._sanitizeOptions(this._options);\n  }\n\n  // Perform the redirected request\n  try {\n    this._performRequest();\n  }\n  catch (cause) {\n    this.emit(\"error\", new RedirectionError(cause));\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters\n      if (typeof input === \"string\") {\n        var urlStr = input;\n        try {\n          input = urlToOptions(new URL(urlStr));\n        }\n        catch (err) {\n          /* istanbul ignore next */\n          input = url.parse(urlStr);\n        }\n      }\n      else if (URL && (input instanceof URL)) {\n        input = urlToOptions(input);\n      }\n      else {\n        callback = options;\n        options = input;\n        input = { protocol: protocol };\n      }\n      if (typeof options === \"function\") {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\n/* istanbul ignore next */\nfunction noop() { /* empty */ }\n\n// from https://github.com/nodejs/node/blob/master/lib/internal/url.js\nfunction urlToOptions(urlObject) {\n  var options = {\n    protocol: urlObject.protocol,\n    hostname: urlObject.hostname.startsWith(\"[\") ?\n      /* istanbul ignore next */\n      urlObject.hostname.slice(1, -1) :\n      urlObject.hostname,\n    hash: urlObject.hash,\n    search: urlObject.search,\n    pathname: urlObject.pathname,\n    path: urlObject.pathname + urlObject.search,\n    href: urlObject.href,\n  };\n  if (urlObject.port !== \"\") {\n    options.port = Number(urlObject.port);\n  }\n  return options;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\n    undefined : String(lastValue).trim();\n}\n\nfunction createErrorType(code, defaultMessage) {\n  function CustomError(cause) {\n    Error.captureStackTrace(this, this.constructor);\n    if (!cause) {\n      this.message = defaultMessage;\n    }\n    else {\n      this.message = defaultMessage + \": \" + cause.message;\n      this.cause = cause;\n    }\n  }\n  CustomError.prototype = new Error();\n  CustomError.prototype.constructor = CustomError;\n  CustomError.prototype.name = \"Error [\" + code + \"]\";\n  CustomError.prototype.code = code;\n  return CustomError;\n}\n\nfunction abortRequest(request) {\n  for (var e = 0; e < events.length; e++) {\n    request.removeListener(events[e], eventHandlers[events[e]]);\n  }\n  request.on(\"error\", noop);\n  request.abort();\n}\n\nfunction isSubdomain(subdomain, domain) {\n  const dot = subdomain.length - domain.length - 1;\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n",null,"module.exports = require(\"assert\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(9496);\n",""],"names":[],"sourceRoot":""}